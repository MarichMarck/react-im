{"ast":null,"code":"import\"antd/lib/dropdown/style\";import _Dropdown from\"antd/lib/dropdown\";import\"antd/lib/skeleton/style\";import _Skeleton from\"antd/lib/skeleton\";import\"antd/lib/list/style\";import _List from\"antd/lib/list\";import\"antd/lib/badge/style\";import _Badge from\"antd/lib/badge\";import\"antd/lib/avatar/style\";import _Avatar from\"antd/lib/avatar\";import\"antd/lib/menu/style\";import _Menu from\"antd/lib/menu\";import _classCallCheck from\"/Users/mr.bo/\\u9879\\u76EE/React/react-im\\u7684\\u526F\\u672C/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/mr.bo/\\u9879\\u76EE/React/react-im\\u7684\\u526F\\u672C/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/mr.bo/\\u9879\\u76EE/React/react-im\\u7684\\u526F\\u672C/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/mr.bo/\\u9879\\u76EE/React/react-im\\u7684\\u526F\\u672C/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/mr.bo/\\u9879\\u76EE/React/react-im\\u7684\\u526F\\u672C/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{connect}from'react-redux';import InputSearch from'./search';import{initChatInfo,modifyContacts,changeRightType}from'../../../redux/actions';var Contacts=/*#__PURE__*/function(_Component){_inherits(Contacts,_Component);function Contacts(){var _getPrototypeOf2;var _this;_classCallCheck(this,Contacts);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Contacts)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={user_id:0,index:0};_this.setSessionId=function(user_id,index){_this.setState({user_id:user_id,index:index});};_this.handleMenuEvent=function(type){var _this$state=_this.state,user_id=_this$state.user_id,index=_this$state.index;var _this$props=_this.props,contacts=_this$props.user.contacts,chatUserInfo=_this$props.chat.chatUserInfo;switch(type){case'remove':// 移除会话\ncontacts.splice(index,1);// 移除该会话元素\n_this.props.modifyContacts(contacts);if(contacts.length===0||chatUserInfo.id===user_id){_this.props.changeRightType('welcome');}break;case'show':// 查看详情\n_this.showMessageByUid(user_id);break;default:// 置顶会话\ncontacts.unshift(contacts.splice(index)[0]);_this.props.modifyContacts(contacts);}};_this.showMessageByUid=function(uid){var contacts=_this.props.user.contacts;var index=contacts.findIndex(function(item){return item.id===uid;});contacts[index].unread=0;_this.props.initChatInfo(contacts[index]);};return _this;}_createClass(Contacts,[{key:\"render\",value:function render(){var _this2=this;var _this$props2=this.props,id=_this$props2.chat.chatUserInfo.id,contacts=_this$props2.user.contacts;var menu=React.createElement(_Menu,null,React.createElement(_Menu.Item,{key:\"1\",onClick:function onClick(){return _this2.handleMenuEvent('remove');}},\"\\u79FB\\u9664\\u4F1A\\u8BDD\"),React.createElement(_Menu.Item,{key:\"2\",onClick:function onClick(){return _this2.handleMenuEvent('show');}},\"\\u53D1\\u8D77\\u4F1A\\u8BDD\"),React.createElement(_Menu.Item,{key:\"3\",onClick:function onClick(){return _this2.handleMenuEvent('top');}},\"\\u7F6E\\u9876\\u4F1A\\u8BDD\"));return React.createElement(\"div\",null,React.createElement(\"div\",{className:\"user-search\"},React.createElement(InputSearch,null)),React.createElement(_List,{className:\"conversation-list\",itemLayout:\"horizontal\",split:false,dataSource:contacts,renderItem:function renderItem(item,index){return React.createElement(_Dropdown,{overlay:menu,trigger:['contextMenu']},React.createElement(_List.Item,{onContextMenu:function onContextMenu(){return _this2.setSessionId(item.id,index);},className:item.id!==id||'active',onClick:function onClick(){return _this2.showMessageByUid(item.id);}},React.createElement(_Skeleton,{avatar:true,loading:item.loading,active:true},React.createElement(_List.Item.Meta,{avatar:React.createElement(_Badge,{count:item.unread},React.createElement(_Avatar,{shape:\"square\",size:\"large\",src:item.avatar})),title:item.nickname,description:item.last_mess}),React.createElement(\"div\",{className:\"timeDate\"},item.time))));}}));}}]);return Contacts;}(Component);export default connect(function(state){return{chat:state.chat,user:state.user};},{initChatInfo:initChatInfo,modifyContacts:modifyContacts,changeRightType:changeRightType})(Contacts);","map":{"version":3,"sources":["/Users/mr.bo/项目/React/react-im的副本/src/containers/chat/contacts/index.jsx"],"names":["React","Component","connect","InputSearch","initChatInfo","modifyContacts","changeRightType","Contacts","state","user_id","index","setSessionId","setState","handleMenuEvent","type","props","contacts","user","chatUserInfo","chat","splice","length","id","showMessageByUid","unshift","uid","findIndex","item","unread","menu","loading","avatar","nickname","last_mess","time"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport InputSearch from './search'\nimport {List, Skeleton, Avatar, Badge, Menu, Dropdown} from 'antd'\n\nimport {initChatInfo, modifyContacts, changeRightType} from '../../../redux/actions'\n\nclass Contacts extends Component {\n\n    state = { user_id: 0, index: 0 }\n\n    render() {\n        const {chat: {chatUserInfo: {id}}, user: {contacts}} = this.props\n        const menu = <Menu>\n            <Menu.Item key=\"1\" onClick={() => this.handleMenuEvent('remove')}>移除会话</Menu.Item>\n            <Menu.Item key=\"2\" onClick={() => this.handleMenuEvent('show')}>发起会话</Menu.Item>\n            <Menu.Item key=\"3\" onClick={() => this.handleMenuEvent('top')}>置顶会话</Menu.Item>\n        </Menu>\n        return (\n            <div>\n                <div className=\"user-search\"><InputSearch/></div>\n                <List className=\"conversation-list\" itemLayout=\"horizontal\"\n                      split={false} dataSource={contacts} renderItem={(item, index) =>\n                    (\n                        <Dropdown overlay={menu} trigger={['contextMenu']}>\n                            <List.Item onContextMenu={() => this.setSessionId(item.id, index)}\n                                className={item.id !== id || 'active'}\n                                onClick={() => this.showMessageByUid(item.id)}\n                            >\n                                <Skeleton avatar loading={item.loading} active>\n                                    <List.Item.Meta\n                                        avatar={\n                                            <Badge count={item.unread}>\n                                                <Avatar shape=\"square\" size=\"large\" src={item.avatar}/>\n                                            </Badge>\n                                        }\n                                        title={item.nickname} description={item.last_mess}\n                                    />\n                                    <div className=\"timeDate\">{item.time}</div>\n                                </Skeleton>\n                            </List.Item>\n                        </Dropdown>\n                    )}\n                />\n            </div>\n        )\n    }\n\n    setSessionId = (user_id, index) => {\n        this.setState({user_id, index})\n    }\n\n    handleMenuEvent = type => {\n        const {user_id, index} = this.state\n        let {user: {contacts}, chat: {chatUserInfo}} = this.props\n        switch (type) {\n            case 'remove': // 移除会话\n                contacts.splice(index, 1) // 移除该会话元素\n                this.props.modifyContacts(contacts)\n                if(contacts.length === 0 || chatUserInfo.id === user_id) {\n                    this.props.changeRightType('welcome')\n                }\n                break\n            case 'show': // 查看详情\n                this.showMessageByUid(user_id)\n                break\n            default: // 置顶会话\n                contacts.unshift(contacts.splice(index)[0])\n                this.props.modifyContacts(contacts)\n        }\n    }\n\n    showMessageByUid = uid => {\n        const {user: {contacts}} = this.props\n        const index = contacts.findIndex(item => item.id === uid)\n        contacts[index].unread = 0\n        this.props.initChatInfo(contacts[index])\n    }\n}\n\nexport default connect(\n    state => ({chat: state.chat, user: state.user}),\n    {initChatInfo, modifyContacts, changeRightType}\n)(Contacts)"]},"metadata":{},"sourceType":"module"}