{"ast":null,"code":"import \"antd/lib/avatar/style\";\nimport _Avatar from \"antd/lib/avatar\";\nimport \"antd/lib/menu/style\";\nimport _Menu from \"antd/lib/menu\";\nimport \"antd/lib/icon/style\";\nimport _Icon from \"antd/lib/icon\";\nimport \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\nvar _jsxFileName = \"/Users/mr.bo/\\u9879\\u76EE/React/react-im/src/components/left-nav/index.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport menuList from '../../config/menuConfig';\nconst {\n  Sider\n} = _Layout;\n\nclass LeftNav extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getMenuDom = () => {\n      return menuList.map(item => React.createElement(_Menu.Item, {\n        key: item.path,\n        title: item.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: item.path,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(_Icon, {\n        type: item.icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }))));\n    };\n\n    this.toSetting = () => {\n      this.props.history.push({\n        pathname: '/setting'\n      });\n    };\n\n    this.setFullScreen = () => {};\n  }\n\n  componentWillMount() {\n    this.menuDoms = this.getMenuDom();\n  }\n\n  render() {\n    const path = this.props.location.pathname;\n    const {\n      user\n    } = this.props;\n    return React.createElement(Sider, {\n      className: \"left-nav\",\n      defaultCollapsed: \"true\",\n      collapsedWidth: \"68\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"user-avatar\",\n      onClick: this.toSetting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(_Avatar, {\n      shape: \"square\",\n      size: \"large\",\n      icon: \"user\",\n      src: user.avatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"menus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(_Menu, {\n      theme: \"dark\",\n      mode: \"inline\",\n      selectedKeys: [path],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, this.menuDoms)), React.createElement(\"div\", {\n      className: \"setting\",\n      style: {\n        bottom: \"80px\"\n      },\n      onClick: this.setFullScreen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"fullscreen\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: ['setting', path === '/setting' ? 'active' : null].join(' '),\n      onClick: this.toSetting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"setting\",\n      theme: \"filled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default connect(state => ({\n  user: state.user\n}), {})(withRouter(LeftNav));","map":{"version":3,"sources":["/Users/mr.bo/项目/React/react-im/src/components/left-nav/index.jsx"],"names":["React","Component","connect","Link","withRouter","menuList","Sider","LeftNav","getMenuDom","map","item","path","title","icon","toSetting","props","history","push","pathname","setFullScreen","componentWillMount","menuDoms","render","location","user","avatar","bottom","join","state"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AAGA,OAAOC,QAAP,MAAqB,yBAArB;AACA,MAAM;AAAEC,EAAAA;AAAF,WAAN;;AAEA,MAAMC,OAAN,SAAsBN,SAAtB,CAAgC;AAAA;AAAA;;AAAA,SAM5BO,UAN4B,GAMf,MAAM;AACf,aAAOH,QAAQ,CAACI,GAAT,CAAaC,IAAI,IACpB,0BAAM,IAAN;AAAW,QAAA,GAAG,EAAEA,IAAI,CAACC,IAArB;AAA2B,QAAA,KAAK,EAAED,IAAI,CAACE,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAEF,IAAI,CAACC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqB;AAAM,QAAA,IAAI,EAAED,IAAI,CAACG,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAArB,CADJ,CADG,CAAP;AAKH,KAZ2B;;AAAA,SAc5BC,SAd4B,GAchB,MAAM;AACd,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB;AAACC,QAAAA,QAAQ,EAAE;AAAX,OAAxB;AACH,KAhB2B;;AAAA,SAkB5BC,aAlB4B,GAkBZ,MAAM,CAErB,CApB2B;AAAA;;AAE5BC,EAAAA,kBAAkB,GAAG;AACjB,SAAKC,QAAL,GAAgB,KAAKb,UAAL,EAAhB;AACH;;AAkBDc,EAAAA,MAAM,GAAG;AACL,UAAMX,IAAI,GAAG,KAAKI,KAAL,CAAWQ,QAAX,CAAoBL,QAAjC;AACA,UAAM;AAAEM,MAAAA;AAAF,QAAW,KAAKT,KAAtB;AACA,WACI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,UAAjB;AAA4B,MAAA,gBAAgB,EAAC,MAA7C;AAAoD,MAAA,cAAc,EAAC,IAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,aAAd;AAA4B,MAAA,OAAO,EAAE,KAAKD,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAuB,MAAA,IAAI,EAAC,OAA5B;AAAoC,MAAA,IAAI,EAAC,MAAzC;AAAgD,MAAA,GAAG,EAAEU,IAAI,CAACC,MAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAII;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,KAAK,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,QAAxB;AAAiC,MAAA,YAAY,EAAE,CAACd,IAAD,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAKU,QADX,CADJ,CAJJ,EAUI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAyB,MAAA,KAAK,EAAE;AAAEK,QAAAA,MAAM,EAAE;AAAV,OAAhC;AAAmD,MAAA,OAAO,EAAE,KAAKP,aAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,IAAI,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAVJ,EAaI;AAAK,MAAA,SAAS,EAAE,CAAC,SAAD,EAAYR,IAAI,KAAK,UAAT,GAAsB,QAAtB,GAAiC,IAA7C,EAAmDgB,IAAnD,CAAwD,GAAxD,CAAhB;AACK,MAAA,OAAO,EAAE,KAAKb,SADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI;AAAM,MAAA,IAAI,EAAC,SAAX;AAAqB,MAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAbJ,CADJ;AAqBH;;AA9C2B;;AAiDhC,eAAeZ,OAAO,CAClB0B,KAAK,KAAK;AAAEJ,EAAAA,IAAI,EAAEI,KAAK,CAACJ;AAAd,CAAL,CADa,EAElB,EAFkB,CAAP,CAGbpB,UAAU,CAACG,OAAD,CAHG,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, withRouter } from 'react-router-dom'\nimport { Avatar, Icon, Menu, Layout } from 'antd'\n\nimport menuList from '../../config/menuConfig'\nconst { Sider } = Layout\n\nclass LeftNav extends Component {\n\n    componentWillMount() {\n        this.menuDoms = this.getMenuDom()\n    }\n\n    getMenuDom = () => {\n        return menuList.map(item => (\n            <Menu.Item key={item.path} title={item.title}>\n                <Link to={item.path}><Icon type={item.icon} /></Link>\n            </Menu.Item>\n        ))\n    }\n\n    toSetting = () => {\n        this.props.history.push({pathname: '/setting'})\n    }\n\n    setFullScreen = () => {\n        \n    }\n\n    render() {\n        const path = this.props.location.pathname\n        const { user } = this.props\n        return (\n            <Sider className=\"left-nav\" defaultCollapsed=\"true\" collapsedWidth=\"68\">\n                <h2 className=\"user-avatar\" onClick={this.toSetting}>\n                    <Avatar shape=\"square\" size=\"large\" icon=\"user\" src={user.avatar} />\n                </h2>\n                <div className=\"menus\">\n                    <Menu theme=\"dark\" mode=\"inline\" selectedKeys={[path]}>\n                        { this.menuDoms }\n                    </Menu>\n                </div>\n                {/* 全屏模式 */}\n                <div className=\"setting\" style={{ bottom: \"80px\"}} onClick={this.setFullScreen}>\n                    <Icon type=\"fullscreen\" />\n                </div>\n                <div className={['setting', path === '/setting' ? 'active' : null].join(' ')}\n                     onClick={this.toSetting}\n                >\n                    <Icon type=\"setting\" theme=\"filled\" />\n                </div>\n            </Sider>\n        )\n    }\n}\n\nexport default connect(\n    state => ({ user: state.user }),\n    {}\n)(withRouter(LeftNav))"]},"metadata":{},"sourceType":"module"}