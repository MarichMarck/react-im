{"ast":null,"code":"import\"antd/lib/skeleton/style\";import _Skeleton from\"antd/lib/skeleton\";import\"antd/lib/list/style\";import _List from\"antd/lib/list\";import\"antd/lib/badge/style\";import _Badge from\"antd/lib/badge\";import\"antd/lib/avatar/style\";import _Avatar from\"antd/lib/avatar\";import _classCallCheck from\"/Users/mr.bo/\\u9879\\u76EE/React/react-im/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/mr.bo/\\u9879\\u76EE/React/react-im/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/mr.bo/\\u9879\\u76EE/React/react-im/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/mr.bo/\\u9879\\u76EE/React/react-im/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/mr.bo/\\u9879\\u76EE/React/react-im/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{connect}from'react-redux';import InputSearch from'./search';import{initChatInfo}from'../../../redux/actions';var Contacts=/*#__PURE__*/function(_Component){_inherits(Contacts,_Component);function Contacts(){var _getPrototypeOf2;var _this;_classCallCheck(this,Contacts);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Contacts)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.showMessageByUid=function(uid){var contacts=_this.props.user.contacts;var index=contacts.findIndex(function(item){return item.id===uid;});contacts[index].unread=0;_this.props.initChatInfo(contacts[index]);};return _this;}_createClass(Contacts,[{key:\"render\",value:function render(){var _this2=this;var _this$props=this.props,chatUserInfo=_this$props.chat.chatUserInfo,contacts=_this$props.user.contacts;var uid=chatUserInfo.uid;return React.createElement(\"div\",null,React.createElement(\"div\",{className:\"user-search\"},React.createElement(InputSearch,null)),React.createElement(_List,{className:\"conversation-list\",loading:false,itemLayout:\"horizontal\",split:false,dataSource:contacts,renderItem:function renderItem(item){return React.createElement(_List.Item,{className:item.id===uid?'active':null,onClick:function onClick(){return _this2.showMessageByUid(item.id);}},React.createElement(_Skeleton,{avatar:true,title:false,loading:item.loading,active:true},React.createElement(_List.Item.Meta,{avatar:React.createElement(_Badge,{count:item.unread},React.createElement(_Avatar,{shape:\"square\",size:\"large\",src:item.avatar})),title:item.nickname,description:item.last_mess}),React.createElement(\"div\",{className:\"timeDate\"},item.time)));}}));}}]);return Contacts;}(Component);export default connect(function(state){return{chat:state.chat,user:state.user};},{initChatInfo:initChatInfo})(Contacts);","map":{"version":3,"sources":["/Users/mr.bo/项目/React/react-im/src/containers/chat/contacts/index.jsx"],"names":["React","Component","connect","InputSearch","initChatInfo","Contacts","showMessageByUid","uid","contacts","props","user","index","findIndex","item","id","unread","chatUserInfo","chat","loading","avatar","nickname","last_mess","time","state"],"mappings":"83BAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CAEA,OAAQC,OAAR,KAAsB,aAAtB,CACA,MAAOC,CAAAA,WAAP,KAAwB,UAAxB,CAEA,OAAQC,YAAR,KAA2B,wBAA3B,C,GAEMC,CAAAA,Q,uYAkCFC,gB,CAAmB,SAAAC,GAAG,CAAI,IACRC,CAAAA,QADQ,CACK,MAAKC,KADV,CACfC,IADe,CACRF,QADQ,CAEtB,GAAMG,CAAAA,KAAK,CAAGH,QAAQ,CAACI,SAAT,CAAmB,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACC,EAAL,GAAYP,GAAhB,EAAvB,CAAd,CACAC,QAAQ,CAACG,KAAD,CAAR,CAAgBI,MAAhB,CAAyB,CAAzB,CACA,MAAKN,KAAL,CAAWL,YAAX,CAAwBI,QAAQ,CAACG,KAAD,CAAhC,EACH,C,2EArCQ,iCAC4C,KAAKF,KADjD,CACSO,YADT,aACEC,IADF,CACSD,YADT,CAC+BR,QAD/B,aACwBE,IADxB,CAC+BF,QAD/B,IAEED,CAAAA,GAFF,CAESS,YAFT,CAEET,GAFF,CAGL,MACI,gCACI,2BAAK,SAAS,CAAC,aAAf,EAA6B,oBAAC,WAAD,MAA7B,CADJ,CAEI,2BAAM,SAAS,CAAC,mBAAhB,CAAoC,OAAO,CAAE,KAA7C,CAAoD,UAAU,CAAC,YAA/D,CACM,KAAK,CAAE,KADb,CACoB,UAAU,CAAEC,QADhC,CAC0C,UAAU,CAAE,oBAAAK,IAAI,QAElD,2BAAM,IAAN,EACI,SAAS,CAAEA,IAAI,CAACC,EAAL,GAAYP,GAAZ,CAAkB,QAAlB,CAA6B,IAD5C,CAEI,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACD,gBAAL,CAAsBO,IAAI,CAACC,EAA3B,CAAN,EAFb,EAII,+BAAU,MAAM,KAAhB,CAAiB,KAAK,CAAE,KAAxB,CAA+B,OAAO,CAAED,IAAI,CAACK,OAA7C,CAAsD,MAAM,KAA5D,EACI,0BAAM,IAAN,CAAW,IAAX,EACI,MAAM,CACF,4BAAO,KAAK,CAAEL,IAAI,CAACE,MAAnB,EACI,6BAAQ,KAAK,CAAC,QAAd,CAAuB,IAAI,CAAC,OAA5B,CAAoC,GAAG,CAAEF,IAAI,CAACM,MAA9C,EADJ,CAFR,CAMI,KAAK,CAAEN,IAAI,CAACO,QANhB,CAOI,WAAW,CAAEP,IAAI,CAACQ,SAPtB,EADJ,CAUI,2BAAK,SAAS,CAAC,UAAf,EAA2BR,IAAI,CAACS,IAAhC,CAVJ,CAJJ,CAFkD,EAD1D,EAFJ,CADJ,CA2BH,C,sBAhCkBrB,S,EA0CvB,cAAeC,CAAAA,OAAO,CAClB,SAAAqB,KAAK,QAAK,CAACN,IAAI,CAAEM,KAAK,CAACN,IAAb,CAAmBP,IAAI,CAAEa,KAAK,CAACb,IAA/B,CAAL,EADa,CAElB,CAACN,YAAY,CAAZA,YAAD,CAFkB,CAAP,CAGbC,QAHa,CAAf","sourcesContent":["import React, {Component} from 'react'\nimport {List, Skeleton, Avatar, Badge} from 'antd'\nimport {connect} from 'react-redux'\nimport InputSearch from './search'\n\nimport {initChatInfo} from '../../../redux/actions'\n\nclass Contacts extends Component {\n\n    render() {\n        const {chat: {chatUserInfo}, user: {contacts}} = this.props\n        const {uid} = chatUserInfo\n        return (\n            <div>\n                <div className=\"user-search\"><InputSearch/></div>\n                <List className=\"conversation-list\" loading={false} itemLayout=\"horizontal\"\n                      split={false} dataSource={contacts} renderItem={item =>\n                    (\n                        <List.Item\n                            className={item.id === uid ? 'active' : null}\n                            onClick={() => this.showMessageByUid(item.id)}\n                        >\n                            <Skeleton avatar title={false} loading={item.loading} active>\n                                <List.Item.Meta\n                                    avatar={\n                                        <Badge count={item.unread}>\n                                            <Avatar shape=\"square\" size=\"large\" src={item.avatar}/>\n                                        </Badge>\n                                    }\n                                    title={item.nickname}\n                                    description={item.last_mess}\n                                />\n                                <div className=\"timeDate\">{item.time}</div>\n                            </Skeleton>\n                        </List.Item>\n                    )}\n                />\n            </div>\n        )\n    }\n\n    showMessageByUid = uid => {\n        const {user: {contacts}} = this.props\n        const index = contacts.findIndex(item => item.id === uid)\n        contacts[index].unread = 0\n        this.props.initChatInfo(contacts[index])\n    }\n}\n\nexport default connect(\n    state => ({chat: state.chat, user: state.user}),\n    {initChatInfo}\n)(Contacts)"]},"metadata":{},"sourceType":"module"}