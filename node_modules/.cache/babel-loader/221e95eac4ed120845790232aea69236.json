{"ast":null,"code":"import \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nconst socket = new WebSocket(\"ws://192.168.8.100:8008/im\");\n\nlet websocket = user => {\n  socket.onopen = () => {\n    socket.send(JSON.stringify({\n      \"type\": \"login\",\n      \"uuid\": user.id,\n      \"content\": \"Hello Go WebSocket\",\n      \"username\": user.nickname\n    }));\n  };\n\n  socket.onmessage = msg => {\n    const data = JSON.parse(msg.data);\n    const {\n      username,\n      content,\n      touuid\n    } = data;\n\n    switch (data.type) {\n      case \"init\":\n        break;\n\n      case \"login\":\n        _message.success(`${data.username} 已连接`);\n\n        break;\n\n      case \"message\":\n        _message.success(`message：${username}: ${content}`);\n\n        break;\n\n      case \"private\":\n        if (touuid === user.user_id) {\n          _message.success(`private：${username}: ${content}`);\n        }\n\n        break;\n\n      case \"logout\":\n        _message.success(data.uuid + \"已下线\");\n\n        break;\n    }\n  };\n\n  socket.onclose = event => {\n    console.log(\"Socket Closed Connection: \", event);\n  };\n\n  socket.onerror = error => {\n    console.log(\"Socket Error: \", error);\n  };\n};\n\nlet sendMsg = msg => {\n  console.log(\"sending msg: \", msg);\n  socket.send(msg);\n};\n\nexport { websocket, sendMsg };","map":{"version":3,"sources":["/Users/mr.bo/项目/React/react-im/src/utils/websocket.js"],"names":["socket","WebSocket","websocket","user","onopen","send","JSON","stringify","id","nickname","onmessage","msg","data","parse","username","content","touuid","type","success","user_id","uuid","onclose","event","console","log","onerror","error","sendMsg"],"mappings":";;AAEA,MAAMA,MAAM,GAAG,IAAIC,SAAJ,CAAc,4BAAd,CAAf;;AACA,IAAIC,SAAS,GAAGC,IAAI,IAAI;AAEpBH,EAAAA,MAAM,CAACI,MAAP,GAAgB,MAAM;AAClBJ,IAAAA,MAAM,CAACK,IAAP,CAAYC,IAAI,CAACC,SAAL,CAAe;AACvB,cAAQ,OADe;AAEvB,cAAQJ,IAAI,CAACK,EAFU;AAGvB,iBAAW,oBAHY;AAIvB,kBAAYL,IAAI,CAACM;AAJM,KAAf,CAAZ;AAMH,GAPD;;AASAT,EAAAA,MAAM,CAACU,SAAP,GAAmBC,GAAG,IAAI;AACtB,UAAMC,IAAI,GAAGN,IAAI,CAACO,KAAL,CAAWF,GAAG,CAACC,IAAf,CAAb;AACA,UAAM;AAAEE,MAAAA,QAAF;AAAYC,MAAAA,OAAZ;AAAqBC,MAAAA;AAArB,QAAgCJ,IAAtC;;AACA,YAAQA,IAAI,CAACK,IAAb;AACI,WAAK,MAAL;AACI;;AACJ,WAAK,OAAL;AACI,iBAAGC,OAAH,CAAY,GAAEN,IAAI,CAACE,QAAS,MAA5B;;AACA;;AACJ,WAAK,SAAL;AACI,iBAAGI,OAAH,CAAY,WAAUJ,QAAS,KAAIC,OAAQ,EAA3C;;AACA;;AACJ,WAAK,SAAL;AACI,YAAGC,MAAM,KAAKb,IAAI,CAACgB,OAAnB,EAA4B;AACxB,mBAAGD,OAAH,CAAY,WAAUJ,QAAS,KAAIC,OAAQ,EAA3C;AACH;;AACD;;AACJ,WAAK,QAAL;AACI,iBAAGG,OAAH,CAAWN,IAAI,CAACQ,IAAL,GAAY,KAAvB;;AACA;AAhBR;AAkBH,GArBD;;AAuBApB,EAAAA,MAAM,CAACqB,OAAP,GAAiBC,KAAK,IAAI;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CF,KAA1C;AACH,GAFD;;AAIAtB,EAAAA,MAAM,CAACyB,OAAP,GAAiBC,KAAK,IAAI;AACtBH,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BE,KAA9B;AACH,GAFD;AAGH,CAzCD;;AA2CA,IAAIC,OAAO,GAAGhB,GAAG,IAAI;AACjBY,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6Bb,GAA7B;AACAX,EAAAA,MAAM,CAACK,IAAP,CAAYM,GAAZ;AACH,CAHD;;AAKA,SAAST,SAAT,EAAoByB,OAApB","sourcesContent":["import { message as AM } from 'antd'\n\nconst socket = new WebSocket(\"ws://192.168.8.100:8008/im\")\nlet websocket = user => {\n\n    socket.onopen = () => {\n        socket.send(JSON.stringify({\n            \"type\": \"login\",\n            \"uuid\": user.id,\n            \"content\": \"Hello Go WebSocket\",\n            \"username\": user.nickname\n        }))\n    }\n\n    socket.onmessage = msg => {\n        const data = JSON.parse(msg.data)\n        const { username, content, touuid } = data\n        switch (data.type) {\n            case \"init\":\n                break;\n            case \"login\":\n                AM.success(`${data.username} 已连接`)\n                break;\n            case \"message\":\n                AM.success(`message：${username}: ${content}`)\n                break;\n            case \"private\":\n                if(touuid === user.user_id) {\n                    AM.success(`private：${username}: ${content}`)\n                }\n                break;\n            case \"logout\":\n                AM.success(data.uuid + \"已下线\")\n                break;\n        }\n    }\n\n    socket.onclose = event => {\n        console.log(\"Socket Closed Connection: \", event)\n    }\n\n    socket.onerror = error => {\n        console.log(\"Socket Error: \", error)\n    }\n}\n\nlet sendMsg = msg => {\n    console.log(\"sending msg: \", msg)\n    socket.send(msg)\n}\n\nexport { websocket, sendMsg }"]},"metadata":{},"sourceType":"module"}