{"ast":null,"code":"import \"antd/lib/skeleton/style\";\nimport _Skeleton from \"antd/lib/skeleton\";\nimport \"antd/lib/list/style\";\nimport _List from \"antd/lib/list\";\nimport \"antd/lib/badge/style\";\nimport _Badge from \"antd/lib/badge\";\nimport \"antd/lib/avatar/style\";\nimport _Avatar from \"antd/lib/avatar\";\nvar _jsxFileName = \"/Users/mr.bo/\\u9879\\u76EE/React/react-im/src/containers/chat/contacts/index.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport InputSearch from './search';\nimport { initChatInfo } from '../../../redux/actions';\n\nclass Contacts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      initLoading: true,\n      loading: false,\n      list: []\n    };\n\n    this.showMessageByUid = uid => {\n      const {\n        list\n      } = this.state;\n      const index = list.findIndex(item => item.uid === uid);\n      list[index].unread = 0;\n      this.props.initChatInfo(list[index]);\n    };\n  }\n\n  componentDidMount() {\n    const {\n      contact\n    } = this.props;\n    console.log(this.props);\n    this.setState({\n      initLoading: false,\n      list: contact\n    });\n  }\n\n  render() {\n    const {\n      initLoading,\n      list\n    } = this.state;\n    const {\n      chat: {\n        chatUserInfo\n      }\n    } = this.props;\n    const {\n      uid\n    } = chatUserInfo;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"user-search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(InputSearch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    })), React.createElement(_List, {\n      className: \"conversation-list\",\n      loading: initLoading,\n      itemLayout: \"horizontal\",\n      split: false,\n      dataSource: list,\n      renderItem: item => React.createElement(_List.Item, {\n        className: item.uid === uid ? 'active' : null,\n        onClick: () => this.showMessageByUid(item.uid),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(_Skeleton, {\n        avatar: true,\n        title: false,\n        loading: item.loading,\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(_List.Item.Meta, {\n        avatar: React.createElement(_Badge, {\n          count: item.unread,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, React.createElement(_Avatar, {\n          shape: \"square\",\n          size: \"large\",\n          src: item.avatar,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        })),\n        title: item.name,\n        description: item.last,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"timeDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"02-24\"))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default connect(state => ({\n  chat: state.chat,\n  contact: state.constact\n}), {\n  initChatInfo\n})(Contacts);","map":{"version":3,"sources":["/Users/mr.bo/项目/React/react-im/src/containers/chat/contacts/index.jsx"],"names":["React","Component","connect","InputSearch","initChatInfo","Contacts","state","initLoading","loading","list","showMessageByUid","uid","index","findIndex","item","unread","props","componentDidMount","contact","console","log","setState","render","chat","chatUserInfo","avatar","name","last","constact"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { List, Skeleton, Avatar, Badge } from 'antd'\nimport { connect } from 'react-redux'\nimport InputSearch from './search'\n\nimport { initChatInfo } from '../../../redux/actions'\n\nclass Contacts extends Component {\n\n    state = {\n        initLoading: true,\n        loading: false,\n        list: [],\n    }\n\n    componentDidMount() {\n        const { contact } = this.props\n        console.log(this.props)\n        this.setState({ initLoading: false, list: contact })\n    }\n\n    render() {\n        const { initLoading, list } = this.state\n        const { chat: { chatUserInfo } } = this.props\n        const { uid } = chatUserInfo\n        return (\n            <div>\n                <div className=\"user-search\"><InputSearch /></div>\n                <List className=\"conversation-list\" loading={initLoading} itemLayout=\"horizontal\"\n                      split={false} dataSource={list} renderItem={item =>\n                    (\n                        <List.Item \n                            className={item.uid === uid ? 'active' : null}\n                            onClick={ () => this.showMessageByUid(item.uid) }\n                        >\n                            <Skeleton avatar title={false} loading={item.loading} active>\n                                <List.Item.Meta\n                                    avatar={\n                                        <Badge count={item.unread}>\n                                            <Avatar shape=\"square\" size=\"large\" src={item.avatar} />\n                                        </Badge>\n                                    }\n                                    title={item.name}\n                                    description={item.last}\n                                />\n                                <div className=\"timeDate\">02-24</div>\n                            </Skeleton>\n                        </List.Item>\n                    )}\n                />\n            </div>\n        )\n    }\n\n    showMessageByUid = uid => {\n        const { list } = this.state\n        const index = list.findIndex(item => item.uid === uid)\n        list[index].unread = 0\n        this.props.initChatInfo(list[index])\n    }\n}\n\nexport default connect(\n    state => ({ chat: state.chat, contact: state.constact }),\n    { initChatInfo }\n)(Contacts)"]},"metadata":{},"sourceType":"module"}