{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { INIT_CHAT_INFO, INIT_MESS_LIST, RECEIVE_CHAT_MSG, SEND_CHAT_MSG, CHANGE_RIGHT_TYPE, INIT_FRIEND_INFO, AUTH_SUCCESS, ERR_MSG, USERINFO, LOGOUT, MODIFY_USER_CONTACTS, GET_NEW_FRIENDS, GET_USER_MAILLIST } from './action-type';\nimport { initUser, initChatInfo, friendInfo } from './init'; // 当前登录的用户信息\n\nfunction user(state = initUser, action) {\n  switch (action.type) {\n    case AUTH_SUCCESS:\n      return { ...action.data,\n        ...state,\n        redirectTo: '/'\n      };\n\n    case USERINFO:\n      const {\n        userInfo,\n        contacts\n      } = action.data;\n      return { ...state,\n        userInfo,\n        contacts\n      };\n\n    case LOGOUT:\n      return { ...action.data,\n        redirectTo: '/login'\n      };\n\n    case ERR_MSG:\n      return { ...state,\n        msg: action.data,\n        redirectTo: '/login'\n      };\n\n    case MODIFY_USER_CONTACTS:\n      return { ...state,\n        contacts: action.data.contacts\n      };\n\n    default:\n      return state;\n  }\n} // 好友的用户基本信息\n\n\nfunction friend(state = friendInfo, action) {\n  switch (action.type) {\n    case INIT_FRIEND_INFO:\n      return { ...state,\n        info: action.data\n      };\n\n    case GET_NEW_FRIENDS:\n      return { ...state,\n        newFriend: action.data\n      };\n\n    case GET_USER_MAILLIST:\n      return { ...state,\n        mailList: action.data\n      };\n\n    default:\n      return state;\n  }\n} // 当前查看的消息列表\n\n\nfunction chat(state = initChatInfo, action) {\n  switch (action.type) {\n    case INIT_CHAT_INFO:\n      const {\n        chatUserInfo,\n        userInfo\n      } = action.data;\n      let message = state.messList;\n      const mKey = `${userInfo.id}${chatUserInfo.id}`;\n      if (!message[mKey]) message = {\n        mKey: []\n      };\n      return { ...state,\n        ...action.data,\n        messList: message\n      };\n\n    case INIT_MESS_LIST:\n      return { ...state,\n        ...action.data\n      };\n\n    case SEND_CHAT_MSG:\n    /* 发送消息 */\n\n    case RECEIVE_CHAT_MSG:\n      /* 接收消息 */\n      const chatMsg = action.data;\n      let messList = state.messList; // key 的关系是：当前用户id + 好友id\n\n      let key = action.type === SEND_CHAT_MSG ? `${chatMsg.id}${chatMsg.to_id}` : `${chatMsg.to_id}${chatMsg.id}`;\n      messList[key] = messList[key] ? [...messList[key], chatMsg] : [chatMsg];\n      return {\n        chatUserInfo: state.chatUserInfo,\n        messList\n      };\n\n    case CHANGE_RIGHT_TYPE:\n      return { ...state,\n        ...action.data\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  user,\n  chat,\n  friend\n});","map":{"version":3,"sources":["/Users/mr.bo/项目/React/react-im/src/redux/reducers.js"],"names":["combineReducers","INIT_CHAT_INFO","INIT_MESS_LIST","RECEIVE_CHAT_MSG","SEND_CHAT_MSG","CHANGE_RIGHT_TYPE","INIT_FRIEND_INFO","AUTH_SUCCESS","ERR_MSG","USERINFO","LOGOUT","MODIFY_USER_CONTACTS","GET_NEW_FRIENDS","GET_USER_MAILLIST","initUser","initChatInfo","friendInfo","user","state","action","type","data","redirectTo","userInfo","contacts","msg","friend","info","newFriend","mailList","chat","chatUserInfo","message","messList","mKey","id","chatMsg","key","to_id"],"mappings":"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","sourcesContent":["import {combineReducers} from 'redux'\nimport {\n    INIT_CHAT_INFO, INIT_MESS_LIST, RECEIVE_CHAT_MSG, SEND_CHAT_MSG,\n    CHANGE_RIGHT_TYPE, INIT_FRIEND_INFO, AUTH_SUCCESS, ERR_MSG,\n    USERINFO, LOGOUT, MODIFY_USER_CONTACTS, GET_NEW_FRIENDS, GET_USER_MAILLIST\n} from './action-type'\nimport {initUser, initChatInfo, friendInfo} from './init'\n\n// 当前登录的用户信息\nfunction user(state = initUser, action) {\n    switch (action.type) {\n        case AUTH_SUCCESS:\n            return {...action.data, ...state, redirectTo: '/'}\n        case USERINFO:\n            const {userInfo, contacts} = action.data\n            return {...state, userInfo, contacts}\n        case LOGOUT:\n            return {...action.data, redirectTo: '/login'}\n        case ERR_MSG:\n            return {...state, msg: action.data, redirectTo: '/login'}\n        case MODIFY_USER_CONTACTS:\n            return {...state, contacts: action.data.contacts}\n        default:\n            return state\n    }\n}\n\n// 好友的用户基本信息\nfunction friend(state = friendInfo, action) {\n    switch (action.type) {\n        case INIT_FRIEND_INFO:\n            return {...state, info: action.data}\n        case GET_NEW_FRIENDS:\n            return {...state, newFriend: action.data}\n        case GET_USER_MAILLIST:\n            return {...state, mailList: action.data}\n        default:\n            return state\n    }\n}\n\n// 当前查看的消息列表\nfunction chat(state = initChatInfo, action) {\n    switch (action.type) {\n        case INIT_CHAT_INFO:\n            const {chatUserInfo, userInfo} = action.data\n            let message = state.messList\n            const mKey = `${userInfo.id}${chatUserInfo.id}`\n            if(!message[mKey]) message = {mKey: []}\n            return {...state, ...action.data, messList: message}\n        case INIT_MESS_LIST:\n            return {...state, ...action.data}\n        case SEND_CHAT_MSG:    /* 发送消息 */\n        case RECEIVE_CHAT_MSG: /* 接收消息 */\n            const chatMsg = action.data\n            let messList = state.messList\n            // key 的关系是：当前用户id + 好友id\n            let key = action.type === SEND_CHAT_MSG ? `${chatMsg.id}${chatMsg.to_id}` : `${chatMsg.to_id}${chatMsg.id}`;\n            messList[key] = messList[key] ? [...messList[key], chatMsg] : [chatMsg];\n            return {\n                chatUserInfo: state.chatUserInfo,\n                messList\n            }\n        case CHANGE_RIGHT_TYPE:\n            return {...state, ...action.data}\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({\n    user, chat, friend\n})"]},"metadata":{},"sourceType":"module"}