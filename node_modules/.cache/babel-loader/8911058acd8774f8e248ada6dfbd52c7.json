{"ast":null,"code":"import \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\nvar _jsxFileName = \"/Users/mr.bo/\\u9879\\u76EE/React/react-im/src/pages/app.jsx\";\n\n/**\n * 聊天应用骨架\n */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport { initMain } from '../redux/actions';\nimport LeftNav from '../components/left-nav';\nimport Routers from '../router';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      screenType: null,\n      token: null,\n      pathName: null\n    };\n  }\n\n  componentWillMount() {\n    const screenType = Cookies.get('screenType');\n    const {\n      pathname\n    } = this.props.location;\n    this.setState({\n      screenType,\n      pathName: pathname\n    });\n  }\n\n  componentDidMount() {\n    const token = Cookies.get('token');\n\n    if (token) {\n      this.setState({\n        token\n      });\n      this.props.initMain(token);\n    }\n  }\n\n  render() {\n    const {\n      token,\n      pathName\n    } = this.state;\n    const {\n      redirectTo\n    } = this.props.user;\n    if (pathName !== '/register') return React.createElement(Redirect, {\n      to: \"/register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    });\n    if (!token || redirectTo === '/login') return React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    });\n    return React.createElement(_Layout, {\n      className: ['container', this.state.screenType === 'fullscreen-exit' ? 'mini-pattern' : null].join(' '),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(LeftNav, {\n      parent: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, Routers.map(item => React.createElement(Route, {\n      exact: true,\n      path: item.path,\n      component: item.components,\n      key: item.path,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })), React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default connect(state => ({\n  user: state.user\n}), {\n  initMain\n})(App);","map":{"version":3,"sources":["/Users/mr.bo/项目/React/react-im/src/pages/app.jsx"],"names":["React","Component","connect","Switch","Route","Redirect","Cookies","initMain","LeftNav","Routers","App","state","screenType","token","pathName","componentWillMount","get","pathname","props","location","setState","componentDidMount","render","redirectTo","user","join","map","item","path","components"],"mappings":";;;;AAAA;;;AAGA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,QAAvB,QAAsC,kBAAtC;AAEA,OAAOC,OAAP,MAAoB,WAApB;AAEA,SAAQC,QAAR,QAAuB,kBAAvB;AAEA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,GAAN,SAAkBT,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAExBU,KAFwB,GAEhB;AAAEC,MAAAA,UAAU,EAAE,IAAd;AAAoBC,MAAAA,KAAK,EAAE,IAA3B;AAAiCC,MAAAA,QAAQ,EAAE;AAA3C,KAFgB;AAAA;;AAIxBC,EAAAA,kBAAkB,GAAG;AACjB,UAAMH,UAAU,GAAGN,OAAO,CAACU,GAAR,CAAY,YAAZ,CAAnB;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKC,KAAL,CAAWC,QAAhC;AACA,SAAKC,QAAL,CAAc;AAAER,MAAAA,UAAF;AAAcE,MAAAA,QAAQ,EAAEG;AAAxB,KAAd;AACH;;AAEDI,EAAAA,iBAAiB,GAAG;AAChB,UAAMR,KAAK,GAAGP,OAAO,CAACU,GAAR,CAAY,OAAZ,CAAd;;AACA,QAAIH,KAAJ,EAAW;AACP,WAAKO,QAAL,CAAc;AAAEP,QAAAA;AAAF,OAAd;AACA,WAAKK,KAAL,CAAWX,QAAX,CAAoBM,KAApB;AACH;AACJ;;AAEDS,EAAAA,MAAM,GAAG;AACL,UAAM;AAAET,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAsB,KAAKH,KAAjC;AACA,UAAM;AAAEY,MAAAA;AAAF,QAAiB,KAAKL,KAAL,CAAWM,IAAlC;AACA,QAAGV,QAAQ,KAAK,WAAhB,EAA6B,OAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAC7B,QAAI,CAACD,KAAD,IAAUU,UAAU,KAAK,QAA7B,EAAuC,OAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACvC,WACI;AAAQ,MAAA,SAAS,EAAE,CAAC,WAAD,EAAc,KAAKZ,KAAL,CAAWC,UAAX,KAA0B,iBAA1B,GAA8C,cAA9C,GAA+D,IAA7E,EAAmFa,IAAnF,CAAwF,GAAxF,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AAAS,MAAA,MAAM,EAAE,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKhB,OAAO,CAACiB,GAAR,CAAYC,IAAI,IAAI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAEA,IAAI,CAACC,IAAxB;AAA8B,MAAA,SAAS,EAAED,IAAI,CAACE,UAA9C;AAA0D,MAAA,GAAG,EAAEF,IAAI,CAACC,IAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApB,CADL,EAEI,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAFJ,CADJ;AASH;;AAhCuB;;AAmC5B,eAAe1B,OAAO,CAClBS,KAAK,KAAK;AAACa,EAAAA,IAAI,EAAEb,KAAK,CAACa;AAAb,CAAL,CADa,EACa;AAACjB,EAAAA;AAAD,CADb,CAAP,CAEbG,GAFa,CAAf","sourcesContent":["/**\n * 聊天应用骨架\n */\nimport React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {Switch, Route, Redirect} from 'react-router-dom'\nimport {Layout} from 'antd'\nimport Cookies from 'js-cookie'\n\nimport {initMain} from '../redux/actions'\n\nimport LeftNav from '../components/left-nav'\nimport Routers from '../router'\n\nclass App extends Component {\n\n    state = { screenType: null, token: null, pathName: null }\n\n    componentWillMount() {\n        const screenType = Cookies.get('screenType')\n        const { pathname } = this.props.location\n        this.setState({ screenType, pathName: pathname })\n    }\n\n    componentDidMount() {\n        const token = Cookies.get('token')\n        if (token) {\n            this.setState({ token })\n            this.props.initMain(token)\n        }\n    }\n\n    render() {\n        const { token, pathName } = this.state\n        const { redirectTo } = this.props.user\n        if(pathName !== '/register') return <Redirect to='/register' />\n        if (!token || redirectTo === '/login') return <Redirect to='/login' />\n        return (\n            <Layout className={['container', this.state.screenType === 'fullscreen-exit' ? 'mini-pattern' : null].join(' ')}>\n                <LeftNav parent={this} />\n                <Switch>\n                    {Routers.map(item => <Route exact path={item.path} component={item.components} key={item.path}/>)}\n                    <Redirect to='/' />\n                </Switch>\n            </Layout>\n        )\n    }\n}\n\nexport default connect(\n    state => ({user: state.user}), {initMain}\n)(App)\n"]},"metadata":{},"sourceType":"module"}