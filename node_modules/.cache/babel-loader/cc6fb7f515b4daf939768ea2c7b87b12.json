{"ast":null,"code":"/**\n * 对应 reducers 中的 action 同步/异步请求\n */\nimport Cookies from 'js-cookie';\nimport { websocket } from '../utils/websocket';\nimport { initChatData, receiveChatMsg, sendChatMsg, showRightType, showFriendInfo, authSuccess, errMsg, userInfo, logOut, modifyUserContacts, getNewFriends, getMailList } from './init';\nimport { reqUserInfo } from '../api';\nimport { pySegSort } from '../utils'; // 数据模拟\n\nimport { user, contact } from '../config/initMain';\nimport { mailList } from '../config/mailList';\nimport { newFriend } from '../config/newFriend'; // 用户登录\n\nexport const login = (username, password) => {\n  return async dispatch => {\n    Cookies.set('token', username + password);\n    dispatch(authSuccess(`欢迎你${username}`));\n  };\n}; // 退出登录\n\nexport const logout = () => {\n  return async dispatch => {\n    Cookies.remove('token');\n    dispatch(logOut({}));\n  };\n}; // 界面信息初始化\n\nexport const initMain = token => {\n  return async dispatch => {\n    dispatch(userInfo({\n      userInfo: user,\n      contacts: contact || []\n    })); // websocket(user)  // 这里可接入 socket\n  };\n}; // 获取用户信息\n\nexport const initUserInfo = token => {\n  return async dispatch => {\n    const response = await reqUserInfo(token);\n    const result = response.data;\n\n    if (result.code === 200) {\n      dispatch(userInfo(result.data));\n      websocket(result.data.userInfo);\n    } else {\n      dispatch(errMsg(result.msg));\n    }\n  };\n}; // 修改消息会话列表\n\nexport const modifyContacts = contacts => {\n  return dispatch => {\n    dispatch(modifyUserContacts({\n      contacts\n    }));\n  };\n}; // 初始化消息列表\n\nexport const initChatInfo = chatUserInfo => {\n  return dispatch => {\n    // 增加欢迎消息\n    dispatch(recvChatMsg({\n      id: chatUserInfo.id,\n      to_id: user.id,\n      avatar: chatUserInfo.avatar,\n      message: `你好，我是${chatUserInfo.nickname}`,\n      position: \"left\"\n    }));\n    dispatch(initChatData({\n      chatUserInfo,\n      loading: false,\n      showRightType: 'message'\n    }));\n  };\n}; // 切换右侧显示状态\n\nexport const changeRightType = type => {\n  return dispatch => {\n    dispatch(showRightType({\n      showRightType: type\n    }));\n  };\n}; // 发送消息\n\nexport const pushChatMsg = chat => {\n  return dispatch => {\n    dispatch(sendChatMsg(chat));\n  };\n}; // 收到好友消息\n\nexport const recvChatMsg = chat => {\n  return dispatch => {\n    dispatch(receiveChatMsg(chat));\n  };\n}; // 获取好友基本信息\n\nexport const getFriendInfo = friend_uid => {\n  return async dispatch => {\n    await dispatch(changeRightType('userInfo'));\n    await dispatch(showFriendInfo(friend_uid));\n  };\n}; // 获取好友申请列表\n\nexport const getNewFriendList = token => {\n  return async dispatch => {\n    dispatch(getNewFriends(newFriend));\n  };\n}; // 获取用户通讯录列表\n\nexport const getUserMailList = token => {\n  return async dispatch => {\n    dispatch(getMailList(pySegSort(mailList)));\n  };\n};","map":{"version":3,"sources":["/Users/mr.bo/项目/React/react-im/src/redux/actions.js"],"names":["Cookies","websocket","initChatData","receiveChatMsg","sendChatMsg","showRightType","showFriendInfo","authSuccess","errMsg","userInfo","logOut","modifyUserContacts","getNewFriends","getMailList","reqUserInfo","pySegSort","user","contact","mailList","newFriend","login","username","password","dispatch","set","logout","remove","initMain","token","contacts","initUserInfo","response","result","data","code","msg","modifyContacts","initChatInfo","chatUserInfo","recvChatMsg","id","to_id","avatar","message","nickname","position","loading","changeRightType","type","pushChatMsg","chat","getFriendInfo","friend_uid","getNewFriendList","getUserMailList"],"mappings":"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","sourcesContent":["/**\n * 对应 reducers 中的 action 同步/异步请求\n */\nimport Cookies from 'js-cookie'\nimport {websocket} from '../utils/websocket'\nimport {\n    initChatData, receiveChatMsg, sendChatMsg, showRightType, showFriendInfo, authSuccess,\n    errMsg, userInfo,logOut, modifyUserContacts, getNewFriends, getMailList\n} from './init'\nimport { reqUserInfo } from '../api'\nimport {pySegSort} from '../utils'\n\n// 数据模拟\nimport {user, contact} from '../config/initMain'\nimport {mailList} from '../config/mailList'\nimport {newFriend} from '../config/newFriend'\n\n// 用户登录\nexport const login = (username, password) => {\n    return async dispatch => {\n        Cookies.set('token', username+password)\n        dispatch(authSuccess(`欢迎你${username}`))\n    }\n}\n\n// 退出登录\nexport const logout = () => {\n    return async dispatch => {\n        Cookies.remove('token'); dispatch(logOut({}))\n    }\n}\n\n// 界面信息初始化\nexport const initMain = token => {\n    return async dispatch => {\n        dispatch(userInfo({userInfo: user, contacts: contact || []}))\n        // websocket(user)  // 这里可接入 socket\n    }\n}\n\n// 获取用户信息\nexport const initUserInfo = token => {\n    return async dispatch => {\n        const response = await reqUserInfo(token)\n        const result = response.data\n        if (result.code === 200) {\n            dispatch(userInfo(result.data))\n            websocket(result.data.userInfo)\n        } else {\n            dispatch(errMsg(result.msg))\n        }\n    }\n}\n\n// 修改消息会话列表\nexport const modifyContacts = contacts => {\n    return dispatch => {\n        dispatch(modifyUserContacts({contacts}))\n    }\n}\n\n// 初始化消息列表\nexport const initChatInfo = chatUserInfo => {\n    return dispatch => {\n        // 增加欢迎消息\n        dispatch(recvChatMsg({\n            id: chatUserInfo.id,\n            to_id: user.id,\n            avatar: chatUserInfo.avatar,\n            message: `你好，我是${chatUserInfo.nickname}`,\n            position: \"left\"\n        }))\n        dispatch(initChatData({chatUserInfo, loading: false, showRightType: 'message'}))\n    }\n}\n\n// 切换右侧显示状态\nexport const changeRightType = type => {\n    return dispatch => {\n        dispatch(showRightType({showRightType: type}))\n    }\n}\n\n// 发送消息\nexport const pushChatMsg = chat => {\n    return dispatch => {\n        dispatch(sendChatMsg(chat))\n    }\n}\n\n// 收到好友消息\nexport const recvChatMsg = chat => {\n    return dispatch => {\n        dispatch(receiveChatMsg(chat))\n    }\n}\n\n// 获取好友基本信息\nexport const getFriendInfo = friend_uid => {\n    return async dispatch => {\n        await dispatch(changeRightType('userInfo'))\n        await dispatch(showFriendInfo(friend_uid))\n    }\n}\n\n// 获取好友申请列表\nexport const getNewFriendList = token => {\n    return async dispatch => {\n        dispatch(getNewFriends(newFriend))\n    }\n}\n\n// 获取用户通讯录列表\nexport const getUserMailList = token => {\n    return async dispatch => {\n        dispatch(getMailList(pySegSort(mailList)))\n    }\n}"]},"metadata":{},"sourceType":"module"}