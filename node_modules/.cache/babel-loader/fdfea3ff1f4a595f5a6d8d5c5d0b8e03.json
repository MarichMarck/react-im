{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/icon/style\";\nimport _Icon from \"antd/lib/icon\";\nvar _jsxFileName = \"/Users/mr.bo/\\u9879\\u76EE/React/react-im/src/containers/chat/message/textarea.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { sendChatMsg } from '../../../redux/actions';\nimport { sendMsg } from '../../../utils/websocket';\nimport Face from '../../../components/message/face';\n\nclass ChatTextarea extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      message: '',\n      showFace: false\n    };\n\n    this.handleTextArea = (name, e) => {\n      this.setState({\n        [name]: e.target.value\n      });\n    };\n\n    this.showFace = e => {\n      e.nativeEvent.stopImmediatePropagation();\n      const {\n        showFace\n      } = this.state;\n      this.setState({\n        showFace: !showFace\n      });\n    };\n\n    this.getFaceItem = (object, faceEmjoy) => {\n      let {\n        message\n      } = this.state;\n      message += faceEmjoy;\n      this.setState({\n        message\n      });\n    };\n\n    this.sendChatMess = e => {\n      e.preventDefault();\n      const {\n        message\n      } = this.state;\n      if (!message) return;\n      this.setState({\n        message: ''\n      });\n      const {\n        user\n      } = this.props;\n      const msgData = {\n        id: user.user_id,\n        avatar: user.avatar,\n        message: message,\n        position: \"right\"\n      };\n      sendMsg(message);\n      this.props.sendChatMsg(msgData);\n    };\n  }\n\n  componentDidMount() {\n    document.onclick = () => this.setState({\n      showFace: false\n    });\n  }\n\n  render() {\n    const {\n      showFace\n    } = this.state;\n    return React.createElement(\"section\", {\n      style: {\n        position: \"relative\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(_Row, {\n      className: \"chat-tools\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      span: 18,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"smile\",\n      onClick: e => this.showFace(e),\n      style: {\n        marginLeft: 5,\n        marginRight: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(_Icon, {\n      type: \"folder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(Face, {\n      showFace: showFace,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    })), React.createElement(_Col, {\n      span: 6,\n      style: {\n        textAlign: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"video-camera\",\n      style: {\n        marginRight: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(_Icon, {\n      type: \"download\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }))), React.createElement(_Input.TextArea, {\n      className: \"chat-textarea\",\n      onChange: e => this.handleTextArea('message', e),\n      placeholder: \"\\u8F93\\u5165\\u4FE1\\u606F...\",\n      onPressEnter: e => this.sendChatMess(e),\n      value: this.state.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(_Button, {\n      style: {\n        float: \"right\"\n      },\n      onClick: e => this.sendChatMess(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"\\u53D1\\u9001\"));\n  }\n\n}\n\nexport default connect(state => ({\n  chat: state.chat,\n  user: state.user\n}), {\n  sendChatMsg\n})(ChatTextarea);","map":{"version":3,"sources":["/Users/mr.bo/项目/React/react-im/src/containers/chat/message/textarea.jsx"],"names":["React","Component","connect","sendChatMsg","sendMsg","Face","ChatTextarea","state","message","showFace","handleTextArea","name","e","setState","target","value","nativeEvent","stopImmediatePropagation","getFaceItem","object","faceEmjoy","sendChatMess","preventDefault","user","props","msgData","id","user_id","avatar","position","componentDidMount","document","onclick","render","marginLeft","marginRight","textAlign","float","chat"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Row, Col, Icon, Button, Input } from 'antd'\n\nimport { sendChatMsg } from '../../../redux/actions'\nimport { sendMsg } from '../../../utils/websocket'\nimport Face from '../../../components/message/face'\n\nclass ChatTextarea extends Component {\n\n    state = { message: '', showFace: false }\n\n    componentDidMount(){\n        document.onclick = () => this.setState({ showFace: false })\n    }\n\n    handleTextArea = (name, e) => {\n        this.setState({ [name]: e.target.value })\n    }\n\n    render() {\n        const { showFace } = this.state\n        return (\n            <section style={{ position: \"relative\" }}>\n                <Row className=\"chat-tools\">\n                    <Col span={18}>\n                        <Icon type=\"smile\" onClick={e => this.showFace(e)} style={{ marginLeft: 5, marginRight: 10 }} />\n                        <Icon type=\"folder\" />\n                        <Face showFace={showFace} />\n                    </Col>\n                    <Col span={6} style={{ textAlign: \"right\" }}>\n                        <Icon type=\"video-camera\" style={{ marginRight: 10 }} />\n                        <Icon type=\"download\" />\n                    </Col>\n                </Row>\n                <Input.TextArea className=\"chat-textarea\"\n                       onChange={e => this.handleTextArea('message', e) } placeholder=\"输入信息...\"\n                       onPressEnter={e => this.sendChatMess(e) }\n                       value={this.state.message}\n                />\n                <Button style={{ float: \"right\" }} onClick={ e => this.sendChatMess(e) }>发送</Button>\n            </section>\n        )\n    }\n\n    showFace = e => {\n        e.nativeEvent.stopImmediatePropagation()\n        const {showFace} = this.state\n        this.setState({ showFace: !showFace })\n    }\n\n    // 接收子组件传值\n    getFaceItem = (object, faceEmjoy) => {\n        let { message } = this.state\n        message += faceEmjoy;\n        this.setState({ message });\n    }\n\n    sendChatMess = e => {\n        e.preventDefault();\n        const { message } = this.state\n        if(!message) return\n        this.setState({ message: '' })\n        const { user } = this.props\n        const msgData = {\n            id: user.user_id,\n            avatar: user.avatar,\n            message: message,\n            position: \"right\"\n        }\n        sendMsg(message)\n        this.props.sendChatMsg(msgData)\n    }\n}\n\nexport default connect(\n    state => ({ chat: state.chat, user: state.user }),\n    { sendChatMsg }\n)(ChatTextarea)"]},"metadata":{},"sourceType":"module"}