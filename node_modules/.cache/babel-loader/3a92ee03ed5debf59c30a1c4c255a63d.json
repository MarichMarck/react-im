{"ast":null,"code":"import\"antd/lib/avatar/style\";import _Avatar from\"antd/lib/avatar\";import\"antd/lib/menu/style\";import _Menu from\"antd/lib/menu\";import\"antd/lib/badge/style\";import _Badge from\"antd/lib/badge\";import\"antd/lib/icon/style\";import _Icon from\"antd/lib/icon\";import _classCallCheck from\"/Users/mr.bo/\\u9879\\u76EE/React/react-im\\u7684\\u526F\\u672C/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/mr.bo/\\u9879\\u76EE/React/react-im\\u7684\\u526F\\u672C/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/mr.bo/\\u9879\\u76EE/React/react-im\\u7684\\u526F\\u672C/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/mr.bo/\\u9879\\u76EE/React/react-im\\u7684\\u526F\\u672C/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/mr.bo/\\u9879\\u76EE/React/react-im\\u7684\\u526F\\u672C/node_modules/@babel/runtime/helpers/esm/inherits\";import\"antd/lib/layout/style\";import _Layout from\"antd/lib/layout\";import React,{Component}from'react';import{connect}from'react-redux';import Cookies from'js-cookie';import{Link,withRouter}from'react-router-dom';import menuList from'../../config/menuConfig';var Sider=_Layout.Sider;var LeftNav=/*#__PURE__*/function(_Component){_inherits(LeftNav,_Component);function LeftNav(){var _getPrototypeOf2;var _this;_classCallCheck(this,LeftNav);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(LeftNav)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={screenType:'fullscreen-exit'};_this.getMenuDom=function(){return menuList.map(function(item){return React.createElement(_Menu.Item,{key:item.path,title:item.title},React.createElement(Link,{to:item.path},item.unread?React.createElement(_Badge,{dot:true},React.createElement(_Icon,{type:item.icon})):React.createElement(_Icon,{type:item.icon})));});};_this.toSetting=function(){_this.props.history.push({pathname:'/setting'});};_this.setFullScreen=function(){var screenType=_this.state.screenType;Cookies.set('screenType',screenType);window.location.reload();// 还是这样省事啊  哈哈\n};return _this;}_createClass(LeftNav,[{key:\"componentWillMount\",value:function componentWillMount(){this.menuDoms=this.getMenuDom();}},{key:\"componentDidMount\",value:function componentDidMount(){var screenType=Cookies.get('screenType');if(screenType){screenType=screenType==='fullscreen'?'fullscreen-exit':'fullscreen';this.setState({screenType:screenType});}}},{key:\"render\",value:function render(){var path=this.props.location.pathname;var userInfo=this.props.user.userInfo;if(!userInfo)return null;return React.createElement(Sider,{className:\"left-nav\",defaultCollapsed:\"true\",collapsedWidth:\"68\"},React.createElement(\"h2\",{className:\"user-avatar\",onClick:this.toSetting},React.createElement(_Avatar,{shape:\"square\",size:\"large\",icon:\"user\",src:userInfo.avatar})),React.createElement(\"div\",{className:\"menus\"},React.createElement(_Menu,{theme:\"dark\",mode:\"inline\",selectedKeys:[path]},this.menuDoms)),React.createElement(\"div\",{className:\"setting\",style:{bottom:\"90px\"},onClick:this.setFullScreen},React.createElement(_Icon,{type:this.state.screenType})),React.createElement(\"div\",{className:['setting',path==='/setting'?'active':null].join(' '),onClick:this.toSetting},React.createElement(_Icon,{type:\"setting\",theme:\"filled\"})));}}]);return LeftNav;}(Component);export default connect(function(state){return{user:state.user};},{})(withRouter(LeftNav));","map":{"version":3,"sources":["/Users/mr.bo/项目/React/react-im的副本/src/components/left-nav/index.jsx"],"names":["React","Component","connect","Cookies","Link","withRouter","menuList","Sider","LeftNav","state","screenType","getMenuDom","map","item","path","title","unread","icon","toSetting","props","history","push","pathname","setFullScreen","set","window","location","reload","menuDoms","get","setState","userInfo","user","avatar","bottom","join"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Cookies from 'js-cookie'\nimport { Link, withRouter } from 'react-router-dom'\nimport { Avatar, Icon, Menu, Layout, Badge } from 'antd'\n\nimport menuList from '../../config/menuConfig'\nconst { Sider } = Layout\n\nclass LeftNav extends Component {\n\n    state = { screenType: 'fullscreen-exit' }\n\n    componentWillMount() {\n        this.menuDoms = this.getMenuDom()\n    }\n\n    componentDidMount() {\n        let screenType = Cookies.get('screenType')\n        if(screenType) {\n            screenType = screenType === 'fullscreen' ? 'fullscreen-exit' : 'fullscreen'\n            this.setState({ screenType: screenType })\n        }\n    }\n\n    render() {\n        const path = this.props.location.pathname\n        const { user: { userInfo } } = this.props\n        if (!userInfo) return null\n        return (\n            <Sider className=\"left-nav\" defaultCollapsed=\"true\" collapsedWidth=\"68\">\n                <h2 className=\"user-avatar\" onClick={this.toSetting}>\n                    <Avatar shape=\"square\" size=\"large\" icon=\"user\" src={userInfo.avatar} />\n                </h2>\n                <div className=\"menus\">\n                    <Menu theme=\"dark\" mode=\"inline\" selectedKeys={[path]}>\n                        { this.menuDoms }\n                    </Menu>\n                </div>\n                {/* 全屏模式 */}\n                <div className=\"setting\" style={{ bottom: \"90px\"}} onClick={this.setFullScreen}>\n                    <Icon type={this.state.screenType} />\n                </div>\n                <div className={['setting', path === '/setting' ? 'active' : null].join(' ')}\n                     onClick={this.toSetting}\n                >\n                    <Icon type=\"setting\" theme=\"filled\" />\n                </div>\n            </Sider>\n        )\n    }\n\n    getMenuDom = () => {\n        return menuList.map(item => (\n            <Menu.Item key={item.path} title={item.title}>\n                <Link to={item.path}>\n                    {\n                        item.unread ?\n                            <Badge dot={true}><Icon type={item.icon} /></Badge> :\n                        <Icon type={item.icon} />\n                    }\n                </Link>\n            </Menu.Item>\n        ))\n    }\n\n    toSetting = () => {\n        this.props.history.push({pathname: '/setting'})\n    }\n\n    setFullScreen = () => {\n        const { screenType } = this.state\n        Cookies.set('screenType', screenType)\n        window.location.reload() // 还是这样省事啊  哈哈\n    }\n}\n\nexport default connect(\n    state => ({ user: state.user }), {}\n)(withRouter(LeftNav))"]},"metadata":{},"sourceType":"module"}