{"ast":null,"code":"import \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\nvar _jsxFileName = \"/Users/mr.bo/\\u9879\\u76EE/React/react-im/src/containers/app.jsx\";\n\n/**\n * 聊天应用骨架\n */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport { websocket } from '../utils/websocket';\nimport LeftNav from '../components/left-nav';\nimport Routers from '../router';\n\nclass App extends Component {\n  componentDidMount() {\n    const token = Cookies.get('token');\n\n    if (token) {\n      const {\n        user\n      } = this.props;\n      this.setState({\n        token\n      }); // 正确操作是先获取用户信息，成功后连接 socket\n\n      websocket(user);\n    }\n  }\n\n  render() {\n    const token = Cookies.get('token');\n    if (!token) return React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    });\n    const screenType = Cookies.get('screenType');\n    return React.createElement(_Layout, {\n      className: ['container', screenType === 'fullscreen-exit' ? 'mini-pattern' : null].join(' '),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(LeftNav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, Routers.map(item => React.createElement(Route, {\n      exact: true,\n      path: item.path,\n      component: item.components,\n      key: item.path,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })), React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default connect(state => ({\n  user: state.user\n}), {})(App);","map":{"version":3,"sources":["/Users/mr.bo/项目/React/react-im/src/containers/app.jsx"],"names":["React","Component","connect","Switch","Route","Redirect","Cookies","websocket","LeftNav","Routers","App","componentDidMount","token","get","user","props","setState","render","screenType","join","map","item","path","components","state"],"mappings":";;;;AAAA;;;AAGA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,QAAwC,kBAAxC;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AAEA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,GAAN,SAAkBT,SAAlB,CAA4B;AAExBU,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,KAAK,GAAGN,OAAO,CAACO,GAAR,CAAY,OAAZ,CAAd;;AACA,QAAID,KAAJ,EAAW;AACP,YAAM;AAAEE,QAAAA;AAAF,UAAW,KAAKC,KAAtB;AACA,WAAKC,QAAL,CAAc;AAACJ,QAAAA;AAAD,OAAd,EAFO,CAGP;;AACAL,MAAAA,SAAS,CAACO,IAAD,CAAT;AACH;AACJ;;AAEDG,EAAAA,MAAM,GAAG;AACL,UAAML,KAAK,GAAGN,OAAO,CAACO,GAAR,CAAY,OAAZ,CAAd;AACA,QAAI,CAACD,KAAL,EAAY,OAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACZ,UAAMM,UAAU,GAAGZ,OAAO,CAACO,GAAR,CAAY,YAAZ,CAAnB;AACA,WACI;AAAQ,MAAA,SAAS,EAAE,CAAC,WAAD,EAAcK,UAAU,KAAK,iBAAf,GAAmC,cAAnC,GAAoD,IAAlE,EAAwEC,IAAxE,CAA6E,GAA7E,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMV,OAAO,CAACW,GAAR,CAAYC,IAAI,IAAI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAEA,IAAI,CAACC,IAAxB;AAA8B,MAAA,SAAS,EAAED,IAAI,CAACE,UAA9C;AAA0D,MAAA,GAAG,EAAEF,IAAI,CAACC,IAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApB,CADN,EAEI,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAFJ,CADJ;AASH;;AAzBuB;;AA4B5B,eAAepB,OAAO,CAClBsB,KAAK,KAAK;AAAEV,EAAAA,IAAI,EAAEU,KAAK,CAACV;AAAd,CAAL,CADa,EACe,EADf,CAAP,CAEbJ,GAFa,CAAf","sourcesContent":["/**\n * 聊天应用骨架\n */\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport { Layout } from 'antd'\nimport Cookies from 'js-cookie'\nimport { websocket } from '../utils/websocket'\n\nimport LeftNav from '../components/left-nav'\nimport Routers from '../router'\n \nclass App extends Component {\n\n    componentDidMount() {\n        const token = Cookies.get('token')\n        if (token) {\n            const { user } = this.props\n            this.setState({token})\n            // 正确操作是先获取用户信息，成功后连接 socket\n            websocket(user)\n        }\n    }\n\n    render() {\n        const token = Cookies.get('token')\n        if (!token) return <Redirect to='/login' />\n        const screenType = Cookies.get('screenType')\n        return (\n            <Layout className={['container', screenType === 'fullscreen-exit' ? 'mini-pattern' : null].join(' ')}>\n                <LeftNav />\n                <Switch>\n                    { Routers.map(item => <Route exact path={item.path} component={item.components} key={item.path} />) }\n                    <Redirect to='/' />\n                </Switch>\n            </Layout>\n        )\n    }\n}\n\nexport default connect(\n    state => ({ user: state.user }), {}\n)(App)"]},"metadata":{},"sourceType":"module"}