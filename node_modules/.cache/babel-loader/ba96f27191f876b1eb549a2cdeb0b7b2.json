{"ast":null,"code":"import \"antd/lib/list/style\";\nimport _List from \"antd/lib/list\";\nimport \"antd/lib/avatar/style\";\nimport _Avatar from \"antd/lib/avatar\";\nvar _jsxFileName = \"/Users/mr.bo/\\u9879\\u76EE/React/react-im/src/pages/mail-list/index.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PubSub from 'pubsub-js';\nimport { changeRightType } from '../../redux/actions';\nimport InputSearch from './search';\nimport mailList from '../../config/mailListConfig';\n\nclass MailList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user_id: 1\n    };\n\n    this.showUserInfo = user_id => {\n      this.setState({\n        user_id\n      });\n      this.props.changeRightType('userInfo');\n      PubSub.publish('showUserInfo', ''); // console.log(Object.values(mailList).find(item => item.find(user => user.id === user_id)))\n\n      const userList = [];\n      Object.values(mailList).find(item => userList.push(...item));\n      const userInfo = userList.find(user => user.id === user_id);\n      console.log(userInfo);\n    };\n\n    this.createMailListDom = () => {\n      const {\n        user_id\n      } = this.state;\n      return Object.keys(mailList).map(key => React.createElement(\"div\", {\n        className: \"m-list-item\",\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"m-list-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, key), React.createElement(_List, {\n        className: \"m-list-user\",\n        itemLayout: \"horizontal\",\n        dataSource: mailList[key],\n        split: false,\n        renderItem: user => React.createElement(_List.Item, {\n          className: user_id === user.id ? 'active' : null,\n          onClick: () => this.showUserInfo(user.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(_List.Item.Meta, {\n          avatar: React.createElement(_Avatar, {\n            shape: \"square\",\n            size: \"large\",\n            src: user.avatar,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }),\n          title: `${user.remark} (${user.name})`,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      })));\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        height: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"user-search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(InputSearch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"mail-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, this.createMailListDom()));\n  }\n\n}\n\nexport default connect(state => ({\n  chat: state.chat\n}), {\n  changeRightType\n})(MailList);","map":{"version":3,"sources":["/Users/mr.bo/项目/React/react-im/src/pages/mail-list/index.jsx"],"names":["React","Component","connect","PubSub","changeRightType","InputSearch","mailList","MailList","state","user_id","showUserInfo","setState","props","publish","userList","Object","values","find","item","push","userInfo","user","id","console","log","createMailListDom","keys","map","key","avatar","remark","name","render","height","chat"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { List, Avatar } from 'antd'\nimport PubSub from 'pubsub-js'\n\nimport { changeRightType } from '../../redux/actions'\nimport InputSearch from './search'\nimport mailList from '../../config/mailListConfig'\n\nclass MailList extends Component {\n\n    state = { user_id: 1 }\n\n    showUserInfo = user_id => {\n        this.setState({ user_id})\n        this.props.changeRightType('userInfo')\n        PubSub.publish('showUserInfo', '')\n        // console.log(Object.values(mailList).find(item => item.find(user => user.id === user_id)))\n        const userList = []\n        Object.values(mailList) .find(item => userList.push(...item))\n        const userInfo = userList.find(user => user.id === user_id)\n        console.log(userInfo)\n    }\n\n    render() {\n        return (\n            <div style={{ height: \"100%\" }}>\n                <div className=\"user-search\"><InputSearch /></div>\n                <div className=\"mail-list\">{ this.createMailListDom() }</div>\n            </div>\n        )\n    }\n\n    createMailListDom = () => {\n        const { user_id } = this.state\n        return Object.keys(mailList).map(key => (\n            <div className=\"m-list-item\" key={key}>\n                <div className=\"m-list-title\">{key}</div>\n                <List\n                    className=\"m-list-user\"\n                    itemLayout=\"horizontal\"\n                    dataSource={mailList[key]}\n                    split={false}\n                    renderItem={user => (\n                        <List.Item \n                            className={ user_id === user.id ? 'active' : null }\n                            onClick={() => this.showUserInfo(user.id)}\n                        >\n                            <List.Item.Meta \n                                avatar={<Avatar shape=\"square\" size=\"large\"  src={ user.avatar } />} \n                                title={`${user.remark} (${user.name})`} \n                            />\n                        </List.Item>\n                    )}\n                />\n            </div>\n        ))\n    }\n}\n\nexport default connect(\n    state => ({ chat: state.chat }),\n    {changeRightType}\n)(MailList)"]},"metadata":{},"sourceType":"module"}