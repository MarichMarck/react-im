{"ast":null,"code":"import \"antd/lib/dropdown/style\";\nimport _Dropdown from \"antd/lib/dropdown\";\nimport \"antd/lib/skeleton/style\";\nimport _Skeleton from \"antd/lib/skeleton\";\nimport \"antd/lib/list/style\";\nimport _List from \"antd/lib/list\";\nimport \"antd/lib/badge/style\";\nimport _Badge from \"antd/lib/badge\";\nimport \"antd/lib/avatar/style\";\nimport _Avatar from \"antd/lib/avatar\";\nimport \"antd/lib/menu/style\";\nimport _Menu from \"antd/lib/menu\";\nvar _jsxFileName = \"/Users/mr.bo/\\u9879\\u76EE/React/react-im/src/containers/chat/contacts/index.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport InputSearch from './search';\nimport { initChatInfo, modifyContacts } from '../../../redux/actions';\n\nclass Contacts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      session_id: 0,\n      index: 0\n    };\n\n    this.setSessionId = (session_id, index) => {\n      this.setState({\n        session_id,\n        index\n      });\n    };\n\n    this.handleMenuEvent = type => {\n      const {\n        session_id,\n        index\n      } = this.state;\n      console.log(session_id, index);\n      let {\n        user: {\n          contacts\n        }\n      } = this.props;\n\n      switch (type) {\n        case 'remove':\n          // 移除会话\n          contacts = contacts.slice(index);\n          this.props.modifyContacts(contacts);\n          break;\n\n        case 'show':\n          // 查看详情\n          break;\n\n        default:\n          // 置顶会话\n          contacts.unshift(contacts.splice(index)[0]);\n          this.props.modifyContacts(contacts);\n      }\n    };\n\n    this.showMessageByUid = uid => {\n      const {\n        user: {\n          contacts\n        }\n      } = this.props;\n      const index = contacts.findIndex(item => item.id === uid);\n      contacts[index].unread = 0;\n      this.props.initChatInfo(contacts[index]);\n    };\n  }\n\n  render() {\n    const {\n      chat: {\n        chatUserInfo: {\n          id\n        }\n      },\n      user: {\n        contacts\n      }\n    } = this.props;\n    const menu = React.createElement(_Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(_Menu.Item, {\n      key: \"1\",\n      onClick: () => this.handleMenuEvent('remove'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"\\u79FB\\u9664\\u4F1A\\u8BDD\"), React.createElement(_Menu.Item, {\n      key: \"2\",\n      onClick: () => this.handleMenuEvent('show'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"\\u67E5\\u770B\\u8BE6\\u60C5\"), React.createElement(_Menu.Item, {\n      key: \"2\",\n      onClick: () => this.handleMenuEvent('top'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"\\u7F6E\\u9876\\u4F1A\\u8BDD\"));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"user-search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(InputSearch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    })), React.createElement(_List, {\n      className: \"conversation-list\",\n      itemLayout: \"horizontal\",\n      split: false,\n      dataSource: contacts,\n      renderItem: (item, index) => React.createElement(_Dropdown, {\n        overlay: menu,\n        trigger: ['contextMenu'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(_List.Item, {\n        onContextMenu: () => this.setSessionId(item.id, index),\n        className: item.id !== id || 'active',\n        onClick: () => this.showMessageByUid(item.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(_Skeleton, {\n        avatar: true,\n        loading: item.loading,\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(_List.Item.Meta, {\n        avatar: React.createElement(_Badge, {\n          count: item.unread,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, React.createElement(_Avatar, {\n          shape: \"square\",\n          size: \"large\",\n          src: item.avatar,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        })),\n        title: item.nickname,\n        description: item.last_mess,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"timeDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, item.time)))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default connect(state => ({\n  chat: state.chat,\n  user: state.user\n}), {\n  initChatInfo,\n  modifyContacts\n})(Contacts);","map":{"version":3,"sources":["/Users/mr.bo/项目/React/react-im/src/containers/chat/contacts/index.jsx"],"names":["React","Component","connect","InputSearch","initChatInfo","modifyContacts","Contacts","state","session_id","index","setSessionId","setState","handleMenuEvent","type","console","log","user","contacts","props","slice","unshift","splice","showMessageByUid","uid","findIndex","item","id","unread","render","chat","chatUserInfo","menu","loading","avatar","nickname","last_mess","time"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport InputSearch from './search'\nimport {List, Skeleton, Avatar, Badge, Menu, Dropdown} from 'antd'\n\nimport {initChatInfo, modifyContacts} from '../../../redux/actions'\n\nclass Contacts extends Component {\n\n    state = { session_id: 0, index: 0 }\n\n    render() {\n        const {chat: {chatUserInfo: {id}}, user: {contacts}} = this.props\n        const menu = <Menu>\n            <Menu.Item key=\"1\" onClick={() => this.handleMenuEvent('remove')}>移除会话</Menu.Item>\n            <Menu.Item key=\"2\" onClick={() => this.handleMenuEvent('show')}>查看详情</Menu.Item>\n            <Menu.Item key=\"2\" onClick={() => this.handleMenuEvent('top')}>置顶会话</Menu.Item>\n        </Menu>\n        return (\n            <div>\n                <div className=\"user-search\"><InputSearch/></div>\n                <List className=\"conversation-list\" itemLayout=\"horizontal\"\n                      split={false} dataSource={contacts} renderItem={(item, index) =>\n                    (\n                        <Dropdown overlay={menu} trigger={['contextMenu']}>\n                            <List.Item onContextMenu={() => this.setSessionId(item.id, index)}\n                                className={item.id !== id || 'active'}\n                                onClick={() => this.showMessageByUid(item.id)}\n                            >\n                                <Skeleton avatar loading={item.loading} active>\n                                    <List.Item.Meta\n                                        avatar={\n                                            <Badge count={item.unread}>\n                                                <Avatar shape=\"square\" size=\"large\" src={item.avatar}/>\n                                            </Badge>\n                                        }\n                                        title={item.nickname} description={item.last_mess}\n                                    />\n                                    <div className=\"timeDate\">{item.time}</div>\n                                </Skeleton>\n                            </List.Item>\n                        </Dropdown>\n                    )}\n                />\n            </div>\n        )\n    }\n\n    setSessionId = (session_id, index) => {\n        this.setState({session_id, index})\n    }\n\n    handleMenuEvent = type => {\n        const {session_id, index} = this.state\n        console.log(session_id, index)\n        let {user: {contacts}} = this.props\n        switch (type) {\n            case 'remove': // 移除会话\n                contacts = contacts.slice(index)\n                this.props.modifyContacts(contacts)\n                break\n            case 'show': // 查看详情\n\n                break\n            default: // 置顶会话\n                contacts.unshift(contacts.splice(index)[0])\n                this.props.modifyContacts(contacts)\n        }\n    }\n\n    showMessageByUid = uid => {\n        const {user: {contacts}} = this.props\n        const index = contacts.findIndex(item => item.id === uid)\n        contacts[index].unread = 0\n        this.props.initChatInfo(contacts[index])\n    }\n}\n\nexport default connect(\n    state => ({chat: state.chat, user: state.user}),\n    {initChatInfo, modifyContacts}\n)(Contacts)"]},"metadata":{},"sourceType":"module"}