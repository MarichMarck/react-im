{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/tooltip/style\";\nimport _Tooltip from \"antd/lib/tooltip\";\nimport \"antd/lib/icon/style\";\nimport _Icon from \"antd/lib/icon\";\nvar _jsxFileName = \"/Users/mr.bo/\\u9879\\u76EE/React/react-im/src/containers/chat/message/textarea.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { pushChatMsg, recvChatMsg, modifyContacts } from '../../../redux/actions'; // import { sendMsg } from '../../../utils/websocket'\n\nimport FaceEmjoy from '../../../components/message/face';\n\nclass ChatTextarea extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      message: '',\n      showFace: false\n    };\n\n    this.handleTextArea = (name, e) => {\n      this.setState({\n        [name]: e.target.value\n      });\n    };\n\n    this.showFace = e => {\n      e.nativeEvent.stopImmediatePropagation();\n      const {\n        showFace\n      } = this.state;\n      this.setState({\n        showFace: !showFace\n      });\n    };\n\n    this.getFaceItem = (object, faceEmjoy) => {\n      let {\n        message\n      } = this.state;\n      message += faceEmjoy + \" \";\n      this.setState({\n        message\n      });\n    };\n\n    this.sendChatMess = e => {\n      e.preventDefault();\n      const {\n        message\n      } = this.state;\n      if (!message) return;\n      this.setState({\n        message: ''\n      }); // 推送socket消息\n\n      const {\n        chat: {\n          chatUserInfo\n        }\n      } = this.props; // sendMsg(message, chatUserInfo.id)\n      // 这是自己的消息\n\n      let {\n        user: {\n          userInfo,\n          contacts\n        }\n      } = this.props;\n      this.props.pushChatMsg({\n        id: userInfo.id,\n        to_id: chatUserInfo.id,\n        avatar: userInfo.avatar,\n        message: message,\n        position: \"right\"\n      });\n      const randomText = [\"工具人一号为您服务～\", `你好，我是${chatUserInfo.nickname}，很高兴认识你`, \"oh god，你终于想起我了啊\", \"明天一起去爬山露营啊，有空吗？\", \"hello，我现在在工作，你呢？\", \"🌹🌹 怎么说呢，那就在一起吧～\"];\n      const lastMessage = randomText[parseInt(Math.random() * randomText.length)];\n      this.props.recvChatMsg({\n        id: chatUserInfo.id,\n        to_id: userInfo.id,\n        avatar: chatUserInfo.avatar,\n        message: lastMessage,\n        position: \"left\"\n      });\n\n      if (contacts) {\n        const index = contacts.findIndex(user => user.id === chatUserInfo.id);\n\n        if (index >= 0) {\n          let info = contacts[index];\n          info.last_mess = lastMessage;\n          info.time = \"刚刚\";\n\n          if (index > 0) {\n            contacts.unshift(info);\n            contacts = contacts.slice(index, 1);\n          }\n\n          this.props.modifyContacts(contacts);\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    document.onclick = () => this.setState({\n      showFace: false\n    });\n  }\n\n  render() {\n    const {\n      showFace\n    } = this.state;\n    return React.createElement(\"section\", {\n      style: {\n        position: \"relative\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(_Row, {\n      className: \"chat-tools\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      span: 18,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(_Tooltip, {\n      title: \"\\u53D1\\u9001\\u8868\\u60C5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"smile\",\n      onClick: e => this.showFace(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    })), React.createElement(_Tooltip, {\n      title: \"\\u53D1\\u9001\\u56FE\\u7247\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"picture\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    })), React.createElement(_Tooltip, {\n      title: \"\\u53D1\\u9001\\u4EE3\\u7801\\u7247\\u6BB5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"code\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    })), React.createElement(_Tooltip, {\n      title: \"\\u53D1\\u9001\\u94FE\\u63A5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    })), React.createElement(FaceEmjoy, {\n      parent: this,\n      showFace: showFace,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })), React.createElement(_Col, {\n      span: 6,\n      style: {\n        textAlign: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(_Tooltip, {\n      title: \"\\u89C6\\u9891\\u804A\\u5929\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"video-camera\",\n      style: {\n        marginRight: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })), React.createElement(_Tooltip, {\n      title: \"\\u622A\\u56FE\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"scissor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })))), React.createElement(_Input.TextArea, {\n      className: \"chat-textarea\",\n      onChange: e => this.handleTextArea('message', e),\n      placeholder: \"\\u8F93\\u5165\\u4FE1\\u606F...\",\n      onPressEnter: e => this.sendChatMess(e),\n      value: this.state.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(_Button, {\n      style: {\n        float: \"right\"\n      },\n      onClick: e => this.sendChatMess(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"\\u53D1\\u9001\"));\n  }\n\n}\n\nexport default connect(state => ({\n  chat: state.chat,\n  user: state.user\n}), {\n  pushChatMsg,\n  recvChatMsg,\n  modifyContacts\n})(ChatTextarea);","map":{"version":3,"sources":["/Users/mr.bo/项目/React/react-im/src/containers/chat/message/textarea.jsx"],"names":["React","Component","connect","pushChatMsg","recvChatMsg","modifyContacts","FaceEmjoy","ChatTextarea","state","message","showFace","handleTextArea","name","e","setState","target","value","nativeEvent","stopImmediatePropagation","getFaceItem","object","faceEmjoy","sendChatMess","preventDefault","chat","chatUserInfo","props","user","userInfo","contacts","id","to_id","avatar","position","randomText","nickname","lastMessage","parseInt","Math","random","length","index","findIndex","info","last_mess","time","unshift","slice","componentDidMount","document","onclick","render","textAlign","marginRight","float"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Row, Col, Icon, Button, Input, Tooltip } from 'antd'\n\nimport { pushChatMsg, recvChatMsg, modifyContacts } from '../../../redux/actions'\n// import { sendMsg } from '../../../utils/websocket'\nimport FaceEmjoy from '../../../components/message/face'\n\nclass ChatTextarea extends Component {\n\n    state = { message: '', showFace: false }\n\n    componentDidMount(){\n        document.onclick = () => this.setState({ showFace: false })\n    }\n\n    handleTextArea = (name, e) => {\n        this.setState({ [name]: e.target.value })\n    }\n\n    render() {\n        const { showFace } = this.state\n        return (\n            <section style={{ position: \"relative\" }}>\n                <Row className=\"chat-tools\">\n                    <Col span={18}>\n                        <Tooltip title=\"发送表情\">\n                            <Icon type=\"smile\" onClick={e => this.showFace(e)} />\n                        </Tooltip>\n                        <Tooltip title=\"发送图片\"><Icon type=\"picture\" /></Tooltip>\n                        <Tooltip title=\"发送代码片段\"><Icon type=\"code\" /></Tooltip>\n                        <Tooltip title=\"发送链接\"><Icon type=\"link\" /></Tooltip>\n                        <FaceEmjoy parent={ this } showFace={showFace} />\n                    </Col>\n                    <Col span={6} style={{ textAlign: \"right\" }}>\n                        <Tooltip title=\"视频聊天\"><Icon type=\"video-camera\" style={{ marginRight: 10 }} /></Tooltip>\n                        <Tooltip title=\"截图\"><Icon type=\"scissor\" /></Tooltip>\n                    </Col>\n                </Row>\n                <Input.TextArea className=\"chat-textarea\"\n                       onChange={e => this.handleTextArea('message', e) } placeholder=\"输入信息...\"\n                       onPressEnter={e => this.sendChatMess(e) }\n                       value={this.state.message}\n                />\n                <Button style={{ float: \"right\" }} onClick={ e => this.sendChatMess(e) }>发送</Button>\n            </section>\n        )\n    }\n\n    showFace = e => {\n        e.nativeEvent.stopImmediatePropagation()\n        const {showFace} = this.state\n        this.setState({ showFace: !showFace })\n    }\n\n    // 接收子组件传值\n    getFaceItem = (object, faceEmjoy) => {\n        let { message } = this.state\n        message += faceEmjoy + \" \"\n        this.setState({ message })\n    }\n\n    sendChatMess = e => {\n        e.preventDefault();\n        const { message } = this.state\n        if(!message) return\n        this.setState({ message: '' })\n\n        // 推送socket消息\n        const { chat: { chatUserInfo }} = this.props\n        // sendMsg(message, chatUserInfo.id)\n\n        // 这是自己的消息\n        let { user: {userInfo, contacts} } = this.props\n        this.props.pushChatMsg({\n            id: userInfo.id,\n            to_id: chatUserInfo.id,\n            avatar: userInfo.avatar,\n            message: message,\n            position: \"right\"\n        })\n\n        const randomText = [\"工具人一号为您服务～\", `你好，我是${chatUserInfo.nickname}，很高兴认识你`, \"oh god，你终于想起我了啊\", \"明天一起去爬山露营啊，有空吗？\", \"hello，我现在在工作，你呢？\", \"🌹🌹 怎么说呢，那就在一起吧～\"]\n        const lastMessage = randomText[parseInt(Math.random()*randomText.length)]\n        this.props.recvChatMsg({\n            id: chatUserInfo.id,\n            to_id: userInfo.id,\n            avatar: chatUserInfo.avatar,\n            message: lastMessage,\n            position: \"left\"\n        })\n\n        if(contacts) {\n            const index = contacts.findIndex(user => user.id === chatUserInfo.id)\n            if(index >= 0) {\n                let info = contacts[index]\n                info.last_mess = lastMessage; info.time = \"刚刚\"\n                if(index > 0) {\n                    contacts.unshift(info)\n                    contacts = contacts.slice(index, 1);\n                }\n                this.props.modifyContacts(contacts)\n            }\n        }\n    }\n}\n\nexport default connect(\n    state => ({ chat: state.chat, user: state.user }),\n    { pushChatMsg, recvChatMsg, modifyContacts }\n)(ChatTextarea)"]},"metadata":{},"sourceType":"module"}