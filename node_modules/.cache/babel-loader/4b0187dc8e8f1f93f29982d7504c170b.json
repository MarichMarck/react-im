{"ast":null,"code":"/**\r\n * 包含n个工具函数的模块\r\n */\n// 通讯录根据昵称拼音首字母排序并分组\nexport const pySegSort = list => {\n  if (!String.prototype.localeCompare) return null;\n  let letters = 'abcdefghjklmnopqrstwxyz'.split('');\n  let zh = '阿八嚓哒妸发旮哈讥咔垃痳拏噢妑七呥扨它穵夕丫帀'.split('');\n  let segs = [];\n  letters.forEach((item, i) => {\n    let cur = {\n      letter: item,\n      data: []\n    };\n    list.forEach(item => {\n      const nickname = item.nickname;\n\n      if (nickname.localeCompare(zh[i]) >= 0 && nickname.localeCompare(zh[i + 1]) < 0) {\n        cur.data.push(item);\n      }\n    });\n\n    if (cur.data.length) {\n      cur.data.sort((a, b) => {\n        return a.localeCompare(b, 'zh');\n      });\n      segs.push(cur);\n    }\n  });\n  return segs;\n};","map":{"version":3,"sources":["/Users/mr.bo/项目/React/react-im/src/utils/index.js"],"names":["pySegSort","list","String","prototype","localeCompare","letters","split","zh","segs","forEach","item","i","cur","letter","data","nickname","push","length","sort","a","b"],"mappings":"AAAA;;;AAIA;AACA,OAAO,MAAMA,SAAS,GAAGC,IAAI,IAAI;AAC7B,MAAI,CAACC,MAAM,CAACC,SAAP,CAAiBC,aAAtB,EAAqC,OAAO,IAAP;AACrC,MAAIC,OAAO,GAAG,0BAA0BC,KAA1B,CAAgC,EAAhC,CAAd;AACA,MAAIC,EAAE,GAAG,0BAA0BD,KAA1B,CAAgC,EAAhC,CAAT;AACA,MAAIE,IAAI,GAAG,EAAX;AACAH,EAAAA,OAAO,CAACI,OAAR,CAAgB,CAACC,IAAD,EAAOC,CAAP,KAAa;AACzB,QAAIC,GAAG,GAAG;AAACC,MAAAA,MAAM,EAAEH,IAAT;AAAeI,MAAAA,IAAI,EAAE;AAArB,KAAV;AACAb,IAAAA,IAAI,CAACQ,OAAL,CAAaC,IAAI,IAAI;AACjB,YAAMK,QAAQ,GAAGL,IAAI,CAACK,QAAtB;;AACA,UAAIA,QAAQ,CAACX,aAAT,CAAuBG,EAAE,CAACI,CAAD,CAAzB,KAAiC,CAAjC,IAAsCI,QAAQ,CAACX,aAAT,CAAuBG,EAAE,CAACI,CAAC,GAAG,CAAL,CAAzB,IAAoC,CAA9E,EAAiF;AAC7EC,QAAAA,GAAG,CAACE,IAAJ,CAASE,IAAT,CAAcN,IAAd;AACH;AACJ,KALD;;AAMA,QAAIE,GAAG,CAACE,IAAJ,CAASG,MAAb,EAAqB;AACjBL,MAAAA,GAAG,CAACE,IAAJ,CAASI,IAAT,CAAe,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACrB,eAAOD,CAAC,CAACf,aAAF,CAAgBgB,CAAhB,EAAmB,IAAnB,CAAP;AACH,OAFD;AAGAZ,MAAAA,IAAI,CAACQ,IAAL,CAAUJ,GAAV;AACH;AACJ,GAdD;AAeA,SAAOJ,IAAP;AACH,CArBM","sourcesContent":["/**\r\n * 包含n个工具函数的模块\r\n */\r\n\r\n// 通讯录根据昵称拼音首字母排序并分组\r\nexport const pySegSort = list => {\r\n    if (!String.prototype.localeCompare) return null\r\n    let letters = 'abcdefghjklmnopqrstwxyz'.split('')\r\n    let zh = '阿八嚓哒妸发旮哈讥咔垃痳拏噢妑七呥扨它穵夕丫帀'.split('')\r\n    let segs = []\r\n    letters.forEach((item, i) => {\r\n        let cur = {letter: item, data: []}\r\n        list.forEach(item => {\r\n            const nickname = item.nickname\r\n            if (nickname.localeCompare(zh[i]) >= 0 && nickname.localeCompare(zh[i + 1]) < 0) {\r\n                cur.data.push(item)\r\n            }\r\n        })\r\n        if (cur.data.length) {\r\n            cur.data.sort( (a, b) => {\r\n                return a.localeCompare(b, 'zh')\r\n            })\r\n            segs.push(cur)\r\n        }\r\n    })\r\n    return segs\r\n}"]},"metadata":{},"sourceType":"module"}