{"ast":null,"code":"import\"antd/lib/list/style\";import _List from\"antd/lib/list\";import\"antd/lib/avatar/style\";import _Avatar from\"antd/lib/avatar\";import _classCallCheck from\"/Users/mr.bo/\\u9879\\u76EE/React/react-im/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/mr.bo/\\u9879\\u76EE/React/react-im/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/mr.bo/\\u9879\\u76EE/React/react-im/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/mr.bo/\\u9879\\u76EE/React/react-im/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/mr.bo/\\u9879\\u76EE/React/react-im/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{connect}from'react-redux';import InputSearch from'./search';import mailList from'../../config/mailListConfig';import{getFriendInfo}from'../../redux/actions';var UserList=/*#__PURE__*/function(_Component){_inherits(UserList,_Component);function UserList(){var _getPrototypeOf2;var _this;_classCallCheck(this,UserList);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(UserList)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={user_id:0};_this.showUserInfo=function(user_id){_this.setState({user_id:user_id});// this.props.getFriendInfo(user_id) /* 正式环境只传ID */\n_this.props.getFriendInfo(_this.getUserInfoById(user_id));};_this.getUserInfoById=function(user_id){var users=Object.values(mailList).map(function(item){return item.find(function(user){return user.id===user_id;});});return users.find(function(user){return user&&user.id===user_id;});};_this.createMailListDom=function(){var user_id=_this.state.user_id;return Object.keys(mailList).map(function(key){return React.createElement(\"div\",{className:\"m-list-item\",key:key},React.createElement(\"div\",{className:\"m-list-title\"},key),React.createElement(_List,{className:\"m-list-user\",itemLayout:\"horizontal\",dataSource:mailList[key],split:false,renderItem:function renderItem(user){return React.createElement(_List.Item,{className:user_id===user.id?'active':null,onClick:function onClick(){return _this.showUserInfo(user.id);}},React.createElement(_List.Item.Meta,{avatar:React.createElement(_Avatar,{shape:\"square\",size:\"large\",src:user.avatar}),title:\"\".concat(user.remark,\" (\").concat(user.name,\")\")}));}}));});};return _this;}_createClass(UserList,[{key:\"render\",value:function render(){return React.createElement(\"div\",{className:\"mail-users\"},React.createElement(\"div\",{className:\"user-search\"},React.createElement(InputSearch,null)),React.createElement(\"div\",{className:\"mail-list\"},this.createMailListDom()));}// 取出指定用户信息\n}]);return UserList;}(Component);export default connect(function(state){return{friend:state.friend};},{getFriendInfo:getFriendInfo})(UserList);","map":{"version":3,"sources":["/Users/mr.bo/项目/React/react-im/src/pages/mail-list/userlist.jsx"],"names":["React","Component","connect","InputSearch","mailList","getFriendInfo","UserList","state","user_id","showUserInfo","setState","props","getUserInfoById","users","Object","values","map","item","find","user","id","createMailListDom","keys","key","avatar","remark","name","friend"],"mappings":"qvBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,OAAT,KAAwB,aAAxB,CAGA,MAAOC,CAAAA,WAAP,KAAwB,UAAxB,CACA,MAAOC,CAAAA,QAAP,KAAqB,6BAArB,CACA,OAASC,aAAT,KAA8B,qBAA9B,C,GAEMC,CAAAA,Q,uYAEFC,K,CAAQ,CAAEC,OAAO,CAAE,CAAX,C,OAERC,Y,CAAe,SAAAD,OAAO,CAAI,CACtB,MAAKE,QAAL,CAAc,CAAEF,OAAO,CAAPA,OAAF,CAAd,EACA;AACA,MAAKG,KAAL,CAAWN,aAAX,CAAyB,MAAKO,eAAL,CAAqBJ,OAArB,CAAzB,EACH,C,OAYDI,e,CAAkB,SAAAJ,OAAO,CAAI,CACzB,GAAMK,CAAAA,KAAK,CAAGC,MAAM,CAACC,MAAP,CAAcX,QAAd,EAAwBY,GAAxB,CAA4B,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACC,IAAL,CAAU,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACC,EAAL,GAAYZ,OAAhB,EAAd,CAAJ,EAAhC,CAAd,CACA,MAAOK,CAAAA,KAAK,CAACK,IAAN,CAAW,SAAAC,IAAI,QAAIA,CAAAA,IAAI,EAAIA,IAAI,CAACC,EAAL,GAAYZ,OAAxB,EAAf,CAAP,CACH,C,OAEDa,iB,CAAoB,UAAM,IACdb,CAAAA,OADc,CACF,MAAKD,KADH,CACdC,OADc,CAEtB,MAAOM,CAAAA,MAAM,CAACQ,IAAP,CAAYlB,QAAZ,EAAsBY,GAAtB,CAA0B,SAAAO,GAAG,QAChC,4BAAK,SAAS,CAAC,aAAf,CAA6B,GAAG,CAAEA,GAAlC,EACI,2BAAK,SAAS,CAAC,cAAf,EAA+BA,GAA/B,CADJ,CAEI,2BACI,SAAS,CAAC,aADd,CAEI,UAAU,CAAC,YAFf,CAGI,UAAU,CAAEnB,QAAQ,CAACmB,GAAD,CAHxB,CAII,KAAK,CAAE,KAJX,CAKI,UAAU,CAAE,oBAAAJ,IAAI,QACZ,2BAAM,IAAN,EACI,SAAS,CAAGX,OAAO,GAAKW,IAAI,CAACC,EAAjB,CAAsB,QAAtB,CAAiC,IADjD,CAEI,OAAO,CAAE,yBAAM,OAAKX,YAAL,CAAkBU,IAAI,CAACC,EAAvB,CAAN,EAFb,EAII,0BAAM,IAAN,CAAW,IAAX,EACI,MAAM,CAAE,6BAAQ,KAAK,CAAC,QAAd,CAAuB,IAAI,CAAC,OAA5B,CAAqC,GAAG,CAAGD,IAAI,CAACK,MAAhD,EADZ,CAEI,KAAK,WAAKL,IAAI,CAACM,MAAV,cAAqBN,IAAI,CAACO,IAA1B,KAFT,EAJJ,CADY,EALpB,EAFJ,CADgC,EAA7B,CAAP,CAsBH,C,2EAvCQ,CACL,MACI,4BAAK,SAAS,CAAC,YAAf,EACI,2BAAK,SAAS,CAAC,aAAf,EAA6B,oBAAC,WAAD,MAA7B,CADJ,CAEI,2BAAK,SAAS,CAAC,WAAf,EAA6B,KAAKL,iBAAL,EAA7B,CAFJ,CADJ,CAMH,CAED;sBAnBmBpB,S,EAoDvB,cAAeC,CAAAA,OAAO,CAClB,SAAAK,KAAK,QAAK,CAAEoB,MAAM,CAAEpB,KAAK,CAACoB,MAAhB,CAAL,EADa,CAElB,CAAEtB,aAAa,CAAbA,aAAF,CAFkB,CAAP,CAGbC,QAHa,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { List, Avatar } from 'antd'\n\nimport InputSearch from './search'\nimport mailList from '../../config/mailListConfig'\nimport { getFriendInfo } from '../../redux/actions'\n\nclass UserList extends Component {\n\n    state = { user_id: 0 }\n\n    showUserInfo = user_id => {\n        this.setState({ user_id})\n        // this.props.getFriendInfo(user_id) /* 正式环境只传ID */\n        this.props.getFriendInfo(this.getUserInfoById(user_id))\n    }\n\n    render() {\n        return (\n            <div className=\"mail-users\">\n                <div className=\"user-search\"><InputSearch /></div>\n                <div className=\"mail-list\">{ this.createMailListDom() }</div>\n            </div>\n        )\n    }\n\n    // 取出指定用户信息\n    getUserInfoById = user_id => {\n        const users = Object.values(mailList).map(item => item.find(user => user.id === user_id))\n        return users.find(user => user && user.id === user_id)\n    }\n\n    createMailListDom = () => {\n        const { user_id } = this.state\n        return Object.keys(mailList).map(key => (\n            <div className=\"m-list-item\" key={key}>\n                <div className=\"m-list-title\">{key}</div>\n                <List\n                    className=\"m-list-user\"\n                    itemLayout=\"horizontal\"\n                    dataSource={mailList[key]}\n                    split={false}\n                    renderItem={user => (\n                        <List.Item \n                            className={ user_id === user.id ? 'active' : null }\n                            onClick={() => this.showUserInfo(user.id)}\n                        >\n                            <List.Item.Meta \n                                avatar={<Avatar shape=\"square\" size=\"large\"  src={ user.avatar } />} \n                                title={`${user.remark} (${user.name})`} \n                            />\n                        </List.Item>\n                    )}\n                />\n            </div>\n        ))\n    }\n}\n\nexport default connect(\n    state => ({ friend: state.friend }),\n    { getFriendInfo }\n)(UserList)"]},"metadata":{},"sourceType":"module"}