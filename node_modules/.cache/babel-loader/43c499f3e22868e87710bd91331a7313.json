{"ast":null,"code":"import \"antd/lib/skeleton/style\";\nimport _Skeleton from \"antd/lib/skeleton\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/avatar/style\";\nimport _Avatar from \"antd/lib/avatar\";\nvar _jsxFileName = \"/Users/mr.bo/\\u9879\\u76EE/React/react-im/src/pages/chat/message/index.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass Message extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.scrollToBottom = () => {\n      this.messagesEnd.scrollIntoView({\n        behavior: 'auto'\n      });\n    };\n\n    this.getMessList = () => {\n      const {\n        chat: {\n          messList,\n          loading\n        }\n      } = this.props;\n    };\n  }\n\n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n\n  componentWillMount() {\n    this.MessListDom = this.getMessList();\n  }\n\n  render() {\n    const {\n      chat: {\n        loading\n      }\n    } = this.props;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(_Skeleton, {\n      loading: loading,\n      avatar: {\n        shape: \"square\"\n      },\n      active: true,\n      paragraph: {\n        rows: 6\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, messList.map(item => {\n      if (item.position === \"left\") {\n        return React.createElement(\"div\", {\n          key: item.id,\n          className: \"message-item message-left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, React.createElement(_Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, React.createElement(_Col, {\n          span: 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, React.createElement(_Avatar, {\n          shape: \"square\",\n          src: item.avatar,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        })), React.createElement(_Col, {\n          span: 23,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"message\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, item.message)))));\n      } else {\n        return React.createElement(\"div\", {\n          key: item.id,\n          className: \"message-item message-right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(_Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(_Col, {\n          span: 1,\n          push: 23,\n          style: {\n            textAlign: \"right\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(_Avatar, {\n          shape: \"square\",\n          src: item.avatar,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        })), React.createElement(_Col, {\n          span: 23,\n          pull: 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"message\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, item.message)))));\n      }\n    })), React.createElement(\"div\", {\n      ref: el => {\n        this.messagesEnd = el;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default connect(state => ({\n  chat: state.chat\n}), {})(Message);","map":{"version":3,"sources":["/Users/mr.bo/项目/React/react-im/src/pages/chat/message/index.jsx"],"names":["React","Component","connect","Message","scrollToBottom","messagesEnd","scrollIntoView","behavior","getMessList","chat","messList","loading","props","componentDidUpdate","componentWillMount","MessListDom","render","shape","rows","map","item","position","id","avatar","message","textAlign","el","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Avatar, Row, Col, Skeleton } from 'antd'\n\nclass Message extends Component {\n\n    componentDidUpdate() {\n        this.scrollToBottom()\n    }\n\n    componentWillMount() {\n        this.MessListDom = this.getMessList()\n    }\n\n    scrollToBottom = () => {\n        this.messagesEnd.scrollIntoView({ behavior: 'auto' });\n    }\n\n    getMessList = () => {\n        const { chat: { messList, loading } } = this.props\n\n    }\n\n    render() {\n        const { chat: { loading } } = this.props\n        return (\n            <div>\n                <Skeleton loading={loading} avatar={{ shape: \"square\" }} active paragraph={{ rows: 6 }}>\n                    {\n                        messList.map(item => {\n                            if(item.position === \"left\") {\n                                return (\n                                    <div key={item.id} className=\"message-item message-left\">\n                                        <Row>\n                                            <Col span={1}>\n                                                <Avatar shape=\"square\" src={item.avatar} />\n                                            </Col>\n                                            <Col span={23}>\n                                                <div className=\"message\">\n                                                    <span>{item.message}</span>\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                    </div>\n                                )\n                            } else {\n                                return (\n                                    <div key={item.id} className=\"message-item message-right\">\n                                        <Row>\n                                            <Col span={1} push={23} style={{ textAlign: \"right\" }}>\n                                                <Avatar shape=\"square\" src={item.avatar} />\n                                            </Col>\n                                            <Col span={23} pull={1}>\n                                                <div className=\"message\">\n                                                    <span>{item.message}</span>\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                    </div>\n                                )\n                            }\n                        })\n                    }\n                </Skeleton>\n                <div ref={(el) => { this.messagesEnd = el }} />\n            </div>\n        )\n    }\n}\n\nexport default connect(\n    state => ({ chat: state.chat }),\n    {  }\n)(Message)"]},"metadata":{},"sourceType":"module"}