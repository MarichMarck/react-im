{"ast":null,"code":"import \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\nvar _jsxFileName = \"/Users/mr.bo/\\u9879\\u76EE/React/react-im\\u7684\\u526F\\u672C/src/containers/app.jsx\";\n\n/**\n * 聊天应用骨架\n */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport { initMain } from '../redux/actions';\nimport LeftNav from '../components/left-nav';\nimport Routers from '../router';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      screenType: null\n    };\n  }\n\n  componentWillMount() {\n    const screenType = Cookies.get('screenType');\n    this.setState({\n      screenType\n    });\n  }\n\n  componentDidMount() {\n    const token = Cookies.get('token');\n\n    if (token) {\n      this.props.initMain(token);\n    }\n  }\n\n  render() {\n    const token = Cookies.get('token');\n    const {\n      redirectTo\n    } = this.props.user;\n    if (!token || redirectTo === '/login') return React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    });\n    return React.createElement(_Layout, {\n      className: ['container', this.state.screenType === 'fullscreen-exit' ? 'mini-pattern' : null].join(' '),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(LeftNav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, Routers.map(item => React.createElement(Route, {\n      exact: true,\n      path: item.path,\n      component: item.components,\n      key: item.path,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })), React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default connect(state => ({\n  user: state.user\n}), {\n  initMain\n})(App);","map":{"version":3,"sources":["/Users/mr.bo/项目/React/react-im的副本/src/containers/app.jsx"],"names":["React","Component","connect","Switch","Route","Redirect","Cookies","initMain","LeftNav","Routers","App","state","screenType","componentWillMount","get","setState","componentDidMount","token","props","render","redirectTo","user","join","map","item","path","components"],"mappings":";;;;AAAA;;;AAGA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,QAAvB,QAAsC,kBAAtC;AAEA,OAAOC,OAAP,MAAoB,WAApB;AAEA,SAAQC,QAAR,QAAuB,kBAAvB;AAEA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,GAAN,SAAkBT,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAExBU,KAFwB,GAEhB;AAACC,MAAAA,UAAU,EAAE;AAAb,KAFgB;AAAA;;AAIxBC,EAAAA,kBAAkB,GAAG;AACjB,UAAMD,UAAU,GAAGN,OAAO,CAACQ,GAAR,CAAY,YAAZ,CAAnB;AACA,SAAKC,QAAL,CAAc;AAACH,MAAAA;AAAD,KAAd;AACH;;AAEDI,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,KAAK,GAAGX,OAAO,CAACQ,GAAR,CAAY,OAAZ,CAAd;;AACA,QAAIG,KAAJ,EAAW;AACP,WAAKC,KAAL,CAAWX,QAAX,CAAoBU,KAApB;AACH;AACJ;;AAEDE,EAAAA,MAAM,GAAG;AACL,UAAMF,KAAK,GAAGX,OAAO,CAACQ,GAAR,CAAY,OAAZ,CAAd;AACA,UAAM;AAACM,MAAAA;AAAD,QAAe,KAAKF,KAAL,CAAWG,IAAhC;AACA,QAAI,CAACJ,KAAD,IAAUG,UAAU,KAAK,QAA7B,EAAuC,OAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACvC,WACI;AACI,MAAA,SAAS,EAAE,CAAC,WAAD,EAAc,KAAKT,KAAL,CAAWC,UAAX,KAA0B,iBAA1B,GAA8C,cAA9C,GAA+D,IAA7E,EAAmFU,IAAnF,CAAwF,GAAxF,CADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKb,OAAO,CAACc,GAAR,CAAYC,IAAI,IAAI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAEA,IAAI,CAACC,IAAxB;AAA8B,MAAA,SAAS,EAAED,IAAI,CAACE,UAA9C;AAA0D,MAAA,GAAG,EAAEF,IAAI,CAACC,IAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApB,CADL,EAEI,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAHJ,CADJ;AAUH;;AA9BuB;;AAiC5B,eAAevB,OAAO,CAClBS,KAAK,KAAK;AAACU,EAAAA,IAAI,EAAEV,KAAK,CAACU;AAAb,CAAL,CADa,EACa;AAACd,EAAAA;AAAD,CADb,CAAP,CAEbG,GAFa,CAAf","sourcesContent":["/**\n * 聊天应用骨架\n */\nimport React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {Switch, Route, Redirect} from 'react-router-dom'\nimport {Layout} from 'antd'\nimport Cookies from 'js-cookie'\n\nimport {initMain} from '../redux/actions'\n\nimport LeftNav from '../components/left-nav'\nimport Routers from '../router'\n\nclass App extends Component {\n\n    state = {screenType: null}\n\n    componentWillMount() {\n        const screenType = Cookies.get('screenType')\n        this.setState({screenType})\n    }\n\n    componentDidMount() {\n        const token = Cookies.get('token')\n        if (token) {\n            this.props.initMain(token)\n        }\n    }\n\n    render() {\n        const token = Cookies.get('token')\n        const {redirectTo} = this.props.user\n        if (!token || redirectTo === '/login') return <Redirect to='/login'/>\n        return (\n            <Layout\n                className={['container', this.state.screenType === 'fullscreen-exit' ? 'mini-pattern' : null].join(' ')}>\n                <LeftNav/>\n                <Switch>\n                    {Routers.map(item => <Route exact path={item.path} component={item.components} key={item.path}/>)}\n                    <Redirect to='/'/>\n                </Switch>\n            </Layout>\n        )\n    }\n}\n\nexport default connect(\n    state => ({user: state.user}), {initMain}\n)(App)"]},"metadata":{},"sourceType":"module"}