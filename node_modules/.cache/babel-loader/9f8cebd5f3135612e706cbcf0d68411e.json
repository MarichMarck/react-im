{"ast":null,"code":"import \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\nvar _jsxFileName = \"/Users/mr.bo/\\u9879\\u76EE/React/react-im/src/containers/app.jsx\";\n\n/**\n * 聊天应用骨架\n */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport { initMain } from '../redux/actions';\nimport LeftNav from '../components/left-nav';\nimport Routers from '../router';\nimport { pySegSort } from '../utils';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      screenType: null\n    };\n  }\n\n  componentWillMount() {\n    const screenType = Cookies.get('screenType');\n    this.setState({\n      screenType\n    });\n    pySegSort(['白案', '百搭', '白菜', '百旺', '王', '李', '张', '刘', '陈', '杨', '黄', '吴', '赵', '周', '的', '徐', '孙', '马', '朱', '胡', '林', '郭', '何', '高', '罗', '', '郑', '梁', '谢', '宋', '唐', '许', '邓', '冯', '韩', '曹', '曾', '彭', '白大', '萧', '蔡', 'F', '潘', '田', '董', '袁', '于', '余', '', '叶', '蒋', '杜', '苏', '魏', '程', '吕', '丁', '沈', '任', '白', '卞']);\n  }\n\n  componentDidMount() {\n    const token = Cookies.get('token');\n\n    if (token) {\n      this.props.initMain(token);\n    }\n  }\n\n  render() {\n    const token = Cookies.get('token');\n    const {\n      redirectTo\n    } = this.props.user;\n    if (!token || redirectTo === '/login') return React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    });\n    return React.createElement(_Layout, {\n      className: ['container', this.state.screenType === 'fullscreen-exit' ? 'mini-pattern' : null].join(' '),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(LeftNav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, Routers.map(item => React.createElement(Route, {\n      exact: true,\n      path: item.path,\n      component: item.components,\n      key: item.path,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })), React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default connect(state => ({\n  user: state.user\n}), {\n  initMain\n})(App);","map":{"version":3,"sources":["/Users/mr.bo/项目/React/react-im/src/containers/app.jsx"],"names":["React","Component","connect","Switch","Route","Redirect","Cookies","initMain","LeftNav","Routers","pySegSort","App","state","screenType","componentWillMount","get","setState","componentDidMount","token","props","render","redirectTo","user","join","map","item","path","components"],"mappings":"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","sourcesContent":["/**\n * 聊天应用骨架\n */\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport { Layout } from 'antd'\nimport Cookies from 'js-cookie'\n\nimport {initMain} from '../redux/actions'\n\nimport LeftNav from '../components/left-nav'\nimport Routers from '../router'\nimport {pySegSort} from '../utils'\n\nclass App extends Component {\n\n    state = {screenType: null}\n\n    componentWillMount() {\n        const screenType = Cookies.get('screenType')\n        this.setState({screenType})\n\n\n        pySegSort(['白案','百搭','白菜','百旺','王','李','张','刘','陈','杨','黄','吴','赵','周','的','徐','孙','马','朱','胡','林','郭','何','高','罗','','郑','梁','谢','宋','唐','许','邓','冯','韩','曹','曾','彭','白大','萧','蔡','F','潘','田','董','袁','于','余','','叶','蒋','杜','苏','魏','程','吕','丁','沈','任','白','卞'])\n    }\n\n    componentDidMount() {\n        const token = Cookies.get('token')\n        if (token) {\n            this.props.initMain(token)\n        }\n    }\n\n    render() {\n        const token = Cookies.get('token')\n        const {redirectTo} = this.props.user\n        if (!token || redirectTo === '/login') return <Redirect to='/login' />\n        return (\n            <Layout className={['container', this.state.screenType === 'fullscreen-exit' ? 'mini-pattern' : null].join(' ')}>\n                <LeftNav />\n                <Switch>\n                    { Routers.map(item => <Route exact path={item.path} component={item.components} key={item.path} />) }\n                    <Redirect to='/' />\n                </Switch>\n            </Layout>\n        )\n    }\n}\n\nexport default connect(\n    state => ({ user: state.user }), {initMain}\n)(App)"]},"metadata":{},"sourceType":"module"}