{"ast":null,"code":"import \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\nvar _jsxFileName = \"/Users/mr.bo/\\u9879\\u76EE/React/react-im/src/containers/app.jsx\";\n\n/**\n * 聊天应用骨架\n */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport { websocket } from '../utils/websocket';\nimport LeftNav from '../components/left-nav';\nimport Routers from '../router';\nimport Login from './login/login';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      token: null\n    };\n\n    this.checkUserToken = () => {\n      const token = Cookies.get('token');\n\n      if (!token) {\n        return React.createElement(Switch, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(Route, {\n          path: \"/login\",\n          component: Login,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }), React.createElement(Redirect, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(Switch, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(Route, {\n          path: \"/login\",\n          component: Login,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }), React.createElement(Redirect, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }));\n      }\n\n      return true;\n    };\n  }\n\n  componentDidMount() {\n    const token = Cookies.get('token');\n\n    if (token) {\n      const {\n        user\n      } = this.props; // 正确操作是先获取用户信息，成功后连接socket\n\n      websocket(user);\n    }\n  }\n\n  render() {\n    // 检测是否登录，判断 cookie 中是否存在 token\n    this.checkUserToken();\n    const screenType = Cookies.get('screenType');\n    return React.createElement(_Layout, {\n      className: ['container', screenType === 'fullscreen-exit' ? 'mini-pattern' : null].join(' '),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(LeftNav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, Routers.map(item => React.createElement(Route, {\n      exact: true,\n      path: item.path,\n      component: item.components,\n      key: item.path,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })), React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default connect(state => ({\n  user: state.user\n}), {})(App);","map":{"version":3,"sources":["/Users/mr.bo/项目/React/react-im/src/containers/app.jsx"],"names":["React","Component","connect","Switch","Route","Redirect","Cookies","websocket","LeftNav","Routers","Login","App","state","token","checkUserToken","get","componentDidMount","user","props","render","screenType","join","map","item","path","components"],"mappings":"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","sourcesContent":["/**\n * 聊天应用骨架\n */\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport { Layout } from 'antd'\nimport Cookies from 'js-cookie'\nimport { websocket } from '../utils/websocket'\n\nimport LeftNav from '../components/left-nav'\nimport Routers from '../router'\nimport Login from './login/login'\n \nclass App extends Component {\n\n    state = { token: null }\n\n    componentDidMount() {\n        const token = Cookies.get('token')\n        if (token) {\n            const { user } = this.props\n            // 正确操作是先获取用户信息，成功后连接socket\n            websocket(user)\n        }\n    }\n\n    render() {\n        // 检测是否登录，判断 cookie 中是否存在 token\n        this.checkUserToken()\n        const screenType = Cookies.get('screenType')\n        return (\n            <Layout className={['container', screenType === 'fullscreen-exit' ? 'mini-pattern' : null].join(' ')}>\n                <LeftNav />\n                <Switch>\n                    { Routers.map(item => <Route exact path={item.path} component={item.components} key={item.path} />) }\n                    <Redirect to='/' />\n                </Switch>\n            </Layout>\n        )\n    }\n\n    checkUserToken = () => {\n        const token = Cookies.get('token')\n        if (!token) {\n            return (\n                <Switch>\n                    <Route path='/login' component={Login} />\n                    <Redirect to='/login' />\n                </Switch>\n            )\n        } else {\n            return (\n                <Switch>\n                    <Route path='/login' component={Login} />\n                    <Redirect to='/login' />\n                </Switch>\n            )\n        }\n        return true\n    }\n}\n\nexport default connect(\n    state => ({ user: state.user }), {}\n)(App)"]},"metadata":{},"sourceType":"module"}