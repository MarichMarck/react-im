{"ast":null,"code":"import \"antd/lib/list/style\";\nimport _List from \"antd/lib/list\";\nimport \"antd/lib/avatar/style\";\nimport _Avatar from \"antd/lib/avatar\";\nvar _jsxFileName = \"/Users/mr.bo/\\u9879\\u76EE/React/react-im/src/containers/maillist/list/userlist.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport cookies from 'js-cookie';\nimport InputSearch from './search';\nimport { getFriendInfo, changeRightType, getNewFriendList, getUserMailList } from '../../../redux/actions';\nimport newFriend from '../../../assets/images/icon/newfriend.png';\nimport groupIcon from '../../../assets/images/icon/qunliao.png';\n\nclass UserList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user_id: 0\n    };\n\n    this.showUserInfo = user_id => {\n      this.setState({\n        user_id\n      });\n      this.props.getFriendInfo(this.getUserInfoById(user_id));\n    };\n\n    this.showNewFriend = () => {\n      const token = cookies.get('token');\n      this.setState({\n        user_id: -1\n      });\n      this.props.changeRightType('newFriend');\n\n      if (token) {\n        this.props.getNewFriendList(token);\n      }\n    };\n\n    this.removeSelect = () => {\n      this.setState({\n        user_id: 0\n      });\n    };\n\n    this.getUserInfoById = user_id => {\n      const {\n        friend: {\n          mailList\n        }\n      } = this.props;\n      const users = mailList.map(item => item.data.find(user => user.id === user_id));\n      return users.find(user => user && user.id === user_id);\n    };\n\n    this.createMailListDom = user_id => {\n      const {\n        friend: {\n          mailList\n        }\n      } = this.props;\n      return mailList.map(item => React.createElement(\"div\", {\n        className: \"m-list-item\",\n        key: item.letter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"m-list-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, item.letter), React.createElement(_List, {\n        className: \"m-list-user\",\n        itemLayout: \"horizontal\",\n        dataSource: item.data,\n        split: false,\n        renderItem: user => React.createElement(_List.Item, {\n          className: user_id === user.id ? 'active' : null,\n          onClick: () => this.showUserInfo(user.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(_List.Item.Meta, {\n          avatar: React.createElement(_Avatar, {\n            shape: \"square\",\n            size: \"large\",\n            src: user.avatar,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83\n            },\n            __self: this\n          }),\n          title: user.nick_remark ? `${user.nick_remark} (${user.nickname})` : user.nickname,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })));\n    };\n  }\n\n  componentDidMount() {\n    const {\n      friend: {\n        mailList\n      }\n    } = this.props;\n\n    if (mailList.length <= 0) {\n      const token = cookies.get('token');\n\n      if (token) {\n        this.props.getUserMailList(token);\n      }\n    }\n  }\n\n  render() {\n    const {\n      user_id\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"mail-users\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"user-search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(InputSearch, {\n      parent: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: ['mail-users-item', user_id === -1 ? 'active' : null].join(' '),\n      onClick: this.showNewFriend,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: newFriend,\n      alt: \"new-friend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), \" \\u65B0\\u7684\\u670B\\u53CB\"), React.createElement(\"div\", {\n      className: \"mail-users-item\",\n      style: {\n        display: \"none\"\n      },\n      onClick: this.showNewFriend,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: groupIcon,\n      alt: \"new-friend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), \" \\u521B\\u5EFA\\u7FA4\\u804A\"), React.createElement(\"div\", {\n      className: \"mail-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, this.createMailListDom(user_id)));\n  }\n\n}\n\nexport default connect(state => ({\n  friend: state.friend\n}), {\n  getFriendInfo,\n  changeRightType,\n  getNewFriendList,\n  getUserMailList\n})(UserList);","map":{"version":3,"sources":["/Users/mr.bo/项目/React/react-im/src/containers/maillist/list/userlist.jsx"],"names":["React","Component","connect","cookies","InputSearch","getFriendInfo","changeRightType","getNewFriendList","getUserMailList","newFriend","groupIcon","UserList","state","user_id","showUserInfo","setState","props","getUserInfoById","showNewFriend","token","get","removeSelect","friend","mailList","users","map","item","data","find","user","id","createMailListDom","letter","avatar","nick_remark","nickname","componentDidMount","length","render","join","display"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {List, Avatar} from 'antd'\nimport cookies from 'js-cookie'\n\nimport InputSearch from './search'\nimport {\n    getFriendInfo, changeRightType, getNewFriendList, getUserMailList\n} from '../../../redux/actions'\n\nimport newFriend from '../../../assets/images/icon/newfriend.png'\nimport groupIcon from '../../../assets/images/icon/qunliao.png'\n\nclass UserList extends Component {\n\n    state = {user_id: 0}\n\n    componentDidMount() {\n        const {friend: {mailList}} = this.props\n        if(mailList.length <= 0) {\n            const token = cookies.get('token')\n            if (token) {\n                this.props.getUserMailList(token)\n            }\n        }\n    }\n\n    render() {\n        const {user_id} = this.state\n        return (\n            <div className=\"mail-users\">\n                <div className=\"user-search\"><InputSearch parent={this} /></div>\n                <div className={['mail-users-item', user_id === -1 ? 'active' : null].join(' ')}\n                     onClick={this.showNewFriend}>\n                    <img src={newFriend} alt=\"new-friend\"/> 新的朋友\n                </div>\n                <div className=\"mail-users-item\" style={{display: \"none\"}}\n                     onClick={this.showNewFriend}>\n                    <img src={groupIcon} alt=\"new-friend\"/> 创建群聊\n                </div>\n                <div className=\"mail-list\">{this.createMailListDom(user_id)}</div>\n            </div>\n        )\n    }\n\n    showUserInfo = user_id => {\n        this.setState({user_id})\n        this.props.getFriendInfo(this.getUserInfoById(user_id))\n    }\n\n    showNewFriend = () => {\n        const token = cookies.get('token')\n        this.setState({user_id: -1})\n        this.props.changeRightType('newFriend')\n        if (token) {\n            this.props.getNewFriendList(token)\n        }\n    }\n\n    removeSelect = () => {\n        this.setState({ user_id: 0 })\n    }\n\n    // 取出指定用户信息\n    getUserInfoById = user_id => {\n        const {friend: {mailList}} = this.props\n        const users = mailList.map(item => item.data.find(user => user.id === user_id))\n        return users.find(user => user && user.id === user_id)\n    }\n\n    createMailListDom = user_id => {\n        const {friend: {mailList}} = this.props\n        return mailList.map(item => (\n            <div className=\"m-list-item\" key={item.letter}>\n                <div className=\"m-list-title\">{item.letter}</div>\n                <List className=\"m-list-user\" itemLayout=\"horizontal\" dataSource={item.data} split={false}\n                      renderItem={user => (\n                          <List.Item\n                              className={user_id === user.id ? 'active' : null}\n                              onClick={() => this.showUserInfo(user.id)}\n                          >\n                              <List.Item.Meta\n                                  avatar={<Avatar shape=\"square\" size=\"large\" src={user.avatar}/>}\n                                  title={user.nick_remark ? `${user.nick_remark} (${user.nickname})` : user.nickname}\n                              />\n                          </List.Item>\n                      )}\n                />\n            </div>\n        ))\n    }\n}\n\nexport default connect(\n    state => ({friend: state.friend}),\n    {getFriendInfo, changeRightType, getNewFriendList, getUserMailList}\n)(UserList)"]},"metadata":{},"sourceType":"module"}