{"ast":null,"code":"import \"antd/lib/skeleton/style\";\nimport _Skeleton from \"antd/lib/skeleton\";\nimport \"antd/lib/list/style\";\nimport _List from \"antd/lib/list\";\nimport \"antd/lib/badge/style\";\nimport _Badge from \"antd/lib/badge\";\nimport \"antd/lib/avatar/style\";\nimport _Avatar from \"antd/lib/avatar\";\nvar _jsxFileName = \"/Users/mr.bo/\\u9879\\u76EE/React/react-im/src/containers/chat/contacts/index.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport InputSearch from './search';\nimport { initChatInfo } from '../../../redux/actions';\n\nclass Contacts extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.showMessageByUid = uid => {\n      const {\n        user: {\n          contacts,\n          userInfo\n        }\n      } = this.props;\n      const index = contacts.findIndex(item => item.id === uid);\n      contacts[index].unread = 0;\n      this.props.initChatInfo(contacts[index], userInfo);\n    };\n  }\n\n  render() {\n    const {\n      chat: {\n        chatUserInfo: {\n          id\n        }\n      },\n      user: {\n        contacts\n      }\n    } = this.props;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"user-search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(InputSearch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    })), React.createElement(_List, {\n      className: \"conversation-list\",\n      itemLayout: \"horizontal\",\n      split: false,\n      dataSource: contacts,\n      renderItem: item => React.createElement(_List.Item, {\n        className: item.id !== id || 'active',\n        onClick: () => this.showMessageByUid(item.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(_Skeleton, {\n        avatar: true,\n        loading: item.loading,\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(_List.Item.Meta, {\n        avatar: React.createElement(_Badge, {\n          count: item.unread,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, React.createElement(_Avatar, {\n          shape: \"square\",\n          size: \"large\",\n          src: item.avatar,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        })),\n        title: item.nickname,\n        description: item.last_mess,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"timeDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, item.time))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default connect(state => ({\n  chat: state.chat,\n  user: state.user\n}), {\n  initChatInfo\n})(Contacts);","map":{"version":3,"sources":["/Users/mr.bo/项目/React/react-im/src/containers/chat/contacts/index.jsx"],"names":["React","Component","connect","InputSearch","initChatInfo","Contacts","showMessageByUid","uid","user","contacts","userInfo","props","index","findIndex","item","id","unread","render","chat","chatUserInfo","loading","avatar","nickname","last_mess","time","state"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,UAAxB;AAGA,SAAQC,YAAR,QAA2B,wBAA3B;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAgC7BK,gBAhC6B,GAgCVC,GAAG,IAAI;AACtB,YAAM;AAACC,QAAAA,IAAI,EAAE;AAACC,UAAAA,QAAD;AAAWC,UAAAA;AAAX;AAAP,UAA+B,KAAKC,KAA1C;AACA,YAAMC,KAAK,GAAGH,QAAQ,CAACI,SAAT,CAAmBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYR,GAAvC,CAAd;AACAE,MAAAA,QAAQ,CAACG,KAAD,CAAR,CAAgBI,MAAhB,GAAyB,CAAzB;AACA,WAAKL,KAAL,CAAWP,YAAX,CAAwBK,QAAQ,CAACG,KAAD,CAAhC,EAAyCF,QAAzC;AACH,KArC4B;AAAA;;AAE7BO,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,IAAI,EAAE;AAACC,QAAAA,YAAY,EAAE;AAACJ,UAAAA;AAAD;AAAf,OAAP;AAA6BP,MAAAA,IAAI,EAAE;AAACC,QAAAA;AAAD;AAAnC,QAAiD,KAAKE,KAA5D;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6B,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA7B,CADJ,EAEI;AAAM,MAAA,SAAS,EAAC,mBAAhB;AAAoC,MAAA,UAAU,EAAC,YAA/C;AACM,MAAA,KAAK,EAAE,KADb;AACoB,MAAA,UAAU,EAAEF,QADhC;AAC0C,MAAA,UAAU,EAAEK,IAAI,IAElD,0BAAM,IAAN;AACI,QAAA,SAAS,EAAEA,IAAI,CAACC,EAAL,KAAYA,EAAZ,IAAkB,QADjC;AAEI,QAAA,OAAO,EAAE,MAAM,KAAKT,gBAAL,CAAsBQ,IAAI,CAACC,EAA3B,CAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAII;AAAU,QAAA,MAAM,MAAhB;AAAiB,QAAA,OAAO,EAAED,IAAI,CAACM,OAA/B;AAAwC,QAAA,MAAM,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,0BAAM,IAAN,CAAW,IAAX;AACI,QAAA,MAAM,EACF;AAAO,UAAA,KAAK,EAAEN,IAAI,CAACE,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAQ,UAAA,KAAK,EAAC,QAAd;AAAuB,UAAA,IAAI,EAAC,OAA5B;AAAoC,UAAA,GAAG,EAAEF,IAAI,CAACO,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CAFR;AAMI,QAAA,KAAK,EAAEP,IAAI,CAACQ,QANhB;AAM0B,QAAA,WAAW,EAAER,IAAI,CAACS,SAN5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EASI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2BT,IAAI,CAACU,IAAhC,CATJ,CAJJ,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AA0BH;;AA9B4B;;AAwCjC,eAAetB,OAAO,CAClBuB,KAAK,KAAK;AAACP,EAAAA,IAAI,EAAEO,KAAK,CAACP,IAAb;AAAmBV,EAAAA,IAAI,EAAEiB,KAAK,CAACjB;AAA/B,CAAL,CADa,EAElB;AAACJ,EAAAA;AAAD,CAFkB,CAAP,CAGbC,QAHa,CAAf","sourcesContent":["import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport InputSearch from './search'\nimport {List, Skeleton, Avatar, Badge} from 'antd'\n\nimport {initChatInfo} from '../../../redux/actions'\n\nclass Contacts extends Component {\n\n    render() {\n        const {chat: {chatUserInfo: {id}}, user: {contacts}} = this.props\n        return (\n            <div>\n                <div className=\"user-search\"><InputSearch/></div>\n                <List className=\"conversation-list\" itemLayout=\"horizontal\"\n                      split={false} dataSource={contacts} renderItem={item =>\n                    (\n                        <List.Item\n                            className={item.id !== id || 'active'}\n                            onClick={() => this.showMessageByUid(item.id)}\n                        >\n                            <Skeleton avatar loading={item.loading} active>\n                                <List.Item.Meta\n                                    avatar={\n                                        <Badge count={item.unread}>\n                                            <Avatar shape=\"square\" size=\"large\" src={item.avatar}/>\n                                        </Badge>\n                                    }\n                                    title={item.nickname} description={item.last_mess}\n                                />\n                                <div className=\"timeDate\">{item.time}</div>\n                            </Skeleton>\n                        </List.Item>\n                    )}\n                />\n            </div>\n        )\n    }\n\n    showMessageByUid = uid => {\n        const {user: {contacts, userInfo}} = this.props\n        const index = contacts.findIndex(item => item.id === uid)\n        contacts[index].unread = 0\n        this.props.initChatInfo(contacts[index], userInfo)\n    }\n}\n\nexport default connect(\n    state => ({chat: state.chat, user: state.user}),\n    {initChatInfo}\n)(Contacts)"]},"metadata":{},"sourceType":"module"}