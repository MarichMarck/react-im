{"ast":null,"code":"import\"antd/lib/list/style\";import _List from\"antd/lib/list\";import\"antd/lib/avatar/style\";import _Avatar from\"antd/lib/avatar\";import _classCallCheck from\"/Users/mr.bo/\\u9879\\u76EE/React/react-im\\u7684\\u526F\\u672C/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/mr.bo/\\u9879\\u76EE/React/react-im\\u7684\\u526F\\u672C/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/mr.bo/\\u9879\\u76EE/React/react-im\\u7684\\u526F\\u672C/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/mr.bo/\\u9879\\u76EE/React/react-im\\u7684\\u526F\\u672C/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/mr.bo/\\u9879\\u76EE/React/react-im\\u7684\\u526F\\u672C/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{connect}from'react-redux';import cookies from'js-cookie';import InputSearch from'./search';import{getFriendInfo,changeRightType,getNewFriendList,getUserMailList}from'../../../redux/actions';import newFriend from'../../../assets/images/icon/newfriend.png';import groupIcon from'../../../assets/images/icon/qunliao.png';var UserList=/*#__PURE__*/function(_Component){_inherits(UserList,_Component);function UserList(){var _getPrototypeOf2;var _this;_classCallCheck(this,UserList);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(UserList)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={user_id:0};_this.showUserInfo=function(user_id){_this.setState({user_id:user_id});_this.props.getFriendInfo(_this.getUserInfoById(user_id));};_this.showNewFriend=function(){var token=cookies.get('token');_this.setState({user_id:-1});_this.props.changeRightType('newFriend');if(token){_this.props.getNewFriendList(token);}};_this.removeSelect=function(){_this.setState({user_id:0});};_this.getUserInfoById=function(user_id){var mailList=_this.props.friend.mailList;var users=mailList.map(function(item){return item.data.find(function(user){return user.id===user_id;});});return users.find(function(user){return user&&user.id===user_id;});};_this.createMailListDom=function(user_id){var mailList=_this.props.friend.mailList;return mailList.map(function(item){return React.createElement(\"div\",{className:\"m-list-item\",key:item.letter},React.createElement(\"div\",{className:\"m-list-title\"},item.letter),React.createElement(_List,{className:\"m-list-user\",itemLayout:\"horizontal\",dataSource:item.data,split:false,renderItem:function renderItem(user){return React.createElement(_List.Item,{className:user_id===user.id?'active':null,onClick:function onClick(){return _this.showUserInfo(user.id);}},React.createElement(_List.Item.Meta,{avatar:React.createElement(_Avatar,{shape:\"square\",size:\"large\",src:user.avatar}),title:user.nick_remark?\"\".concat(user.nick_remark,\" (\").concat(user.nickname,\")\"):user.nickname}));}}));});};return _this;}_createClass(UserList,[{key:\"componentDidMount\",value:function componentDidMount(){var mailList=this.props.friend.mailList;if(mailList.length<=0){var token=cookies.get('token');if(token){this.props.getUserMailList(token);}}}},{key:\"render\",value:function render(){var user_id=this.state.user_id;return React.createElement(\"div\",{className:\"mail-users\"},React.createElement(\"div\",{className:\"user-search\"},React.createElement(InputSearch,{parent:this})),React.createElement(\"div\",{className:['mail-users-item',user_id===-1?'active':null].join(' '),onClick:this.showNewFriend},React.createElement(\"img\",{src:newFriend,alt:\"new-friend\"}),\" \\u65B0\\u7684\\u670B\\u53CB\"),React.createElement(\"div\",{className:\"mail-users-item\",style:{display:\"none\"},onClick:this.showNewFriend},React.createElement(\"img\",{src:groupIcon,alt:\"new-friend\"}),\" \\u521B\\u5EFA\\u7FA4\\u804A\"),React.createElement(\"div\",{className:\"mail-list\"},this.createMailListDom(user_id)));}}]);return UserList;}(Component);export default connect(function(state){return{friend:state.friend};},{getFriendInfo:getFriendInfo,changeRightType:changeRightType,getNewFriendList:getNewFriendList,getUserMailList:getUserMailList})(UserList);","map":{"version":3,"sources":["/Users/mr.bo/项目/React/react-im的副本/src/containers/maillist/list/userlist.jsx"],"names":["React","Component","connect","cookies","InputSearch","getFriendInfo","changeRightType","getNewFriendList","getUserMailList","newFriend","groupIcon","UserList","state","user_id","showUserInfo","setState","props","getUserInfoById","showNewFriend","token","get","removeSelect","mailList","friend","users","map","item","data","find","user","id","createMailListDom","letter","avatar","nick_remark","nickname","length","join","display"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {List, Avatar} from 'antd'\nimport cookies from 'js-cookie'\n\nimport InputSearch from './search'\nimport {\n    getFriendInfo, changeRightType, getNewFriendList, getUserMailList\n} from '../../../redux/actions'\n\nimport newFriend from '../../../assets/images/icon/newfriend.png'\nimport groupIcon from '../../../assets/images/icon/qunliao.png'\n\nclass UserList extends Component {\n\n    state = {user_id: 0}\n\n    componentDidMount() {\n        const {friend: {mailList}} = this.props\n        if(mailList.length <= 0) {\n            const token = cookies.get('token')\n            if (token) {\n                this.props.getUserMailList(token)\n            }\n        }\n    }\n\n    render() {\n        const {user_id} = this.state\n        return (\n            <div className=\"mail-users\">\n                <div className=\"user-search\"><InputSearch parent={this} /></div>\n                <div className={['mail-users-item', user_id === -1 ? 'active' : null].join(' ')}\n                     onClick={this.showNewFriend}>\n                    <img src={newFriend} alt=\"new-friend\"/> 新的朋友\n                </div>\n                <div className=\"mail-users-item\" style={{display: \"none\"}}\n                     onClick={this.showNewFriend}>\n                    <img src={groupIcon} alt=\"new-friend\"/> 创建群聊\n                </div>\n                <div className=\"mail-list\">{this.createMailListDom(user_id)}</div>\n            </div>\n        )\n    }\n\n    showUserInfo = user_id => {\n        this.setState({user_id})\n        this.props.getFriendInfo(this.getUserInfoById(user_id))\n    }\n\n    showNewFriend = () => {\n        const token = cookies.get('token')\n        this.setState({user_id: -1})\n        this.props.changeRightType('newFriend')\n        if (token) {\n            this.props.getNewFriendList(token)\n        }\n    }\n\n    removeSelect = () => {\n        this.setState({ user_id: 0 })\n    }\n\n    // 取出指定用户信息\n    getUserInfoById = user_id => {\n        const {friend: {mailList}} = this.props\n        const users = mailList.map(item => item.data.find(user => user.id === user_id))\n        return users.find(user => user && user.id === user_id)\n    }\n\n    createMailListDom = user_id => {\n        const {friend: {mailList}} = this.props\n        return mailList.map(item => (\n            <div className=\"m-list-item\" key={item.letter}>\n                <div className=\"m-list-title\">{item.letter}</div>\n                <List className=\"m-list-user\" itemLayout=\"horizontal\" dataSource={item.data} split={false}\n                      renderItem={user => (\n                          <List.Item\n                              className={user_id === user.id ? 'active' : null}\n                              onClick={() => this.showUserInfo(user.id)}\n                          >\n                              <List.Item.Meta\n                                  avatar={<Avatar shape=\"square\" size=\"large\" src={user.avatar}/>}\n                                  title={user.nick_remark ? `${user.nick_remark} (${user.nickname})` : user.nickname}\n                              />\n                          </List.Item>\n                      )}\n                />\n            </div>\n        ))\n    }\n}\n\nexport default connect(\n    state => ({friend: state.friend}),\n    {getFriendInfo, changeRightType, getNewFriendList, getUserMailList}\n)(UserList)"]},"metadata":{},"sourceType":"module"}