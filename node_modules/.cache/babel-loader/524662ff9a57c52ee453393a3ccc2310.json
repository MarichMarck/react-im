{"ast":null,"code":"/**\n * 对应 reducers 中的 action 同步/异步请求\n */\nimport Cookies from 'js-cookie';\nimport { websocket } from '../utils/websocket';\nimport { initChatData, receiveChatMsg, sendChatMsg, showRightType, showFriendInfo, authSuccess, errMsg, userInfo, logOut, modifyUserContacts, getNewFriends, getMailList } from './init';\nimport { reqLogin, reqUserInfo, reqLogout, reqNewFriendList } from '../api';\nimport { pySegSort } from '../utils'; // 数据模拟\n\nimport { user, contact } from '../config/initMain';\nimport { mailList } from '../config/mailList'; // 用户登录\n\nexport const login = (username, password) => {\n  return async dispatch => {\n    const response = await reqLogin({\n      username,\n      password\n    });\n    const result = response.data;\n\n    if (result.code === 200) {\n      Cookies.set('token', result.data.token);\n      dispatch(authSuccess(result.data));\n    } else {\n      dispatch(errMsg(result.msg));\n    }\n  };\n}; // 退出登录\n\nexport const logout = () => {\n  return async dispatch => {\n    const response = await reqLogout();\n    const result = response.data;\n\n    if (result.code === 200) {\n      Cookies.remove('token');\n      dispatch(logOut({}));\n    } else {\n      dispatch(errMsg(result.msg));\n    }\n  };\n}; // 界面信息初始化\n\nexport const initMain = token => {\n  return async dispatch => {\n    dispatch(userInfo({\n      userInfo: user,\n      contacts: contact || []\n    })); // websocket(user)  // 这里可接入 socket\n  };\n}; // 获取用户信息\n\nexport const initUserInfo = token => {\n  return async dispatch => {\n    const response = await reqUserInfo(token);\n    const result = response.data;\n\n    if (result.code === 200) {\n      dispatch(userInfo(result.data));\n      websocket(result.data.userInfo);\n    } else {\n      dispatch(errMsg(result.msg));\n    }\n  };\n}; // 修改消息会话列表\n\nexport const modifyContacts = contacts => {\n  return dispatch => {\n    dispatch(modifyUserContacts({\n      contacts\n    }));\n  };\n}; // 初始化消息列表\n\nexport const initChatInfo = chatUserInfo => {\n  return dispatch => {\n    dispatch(initChatData({\n      chatUserInfo,\n      loading: false,\n      showRightType: 'message'\n    }));\n  };\n}; // 切换右侧显示状态\n\nexport const changeRightType = type => {\n  return dispatch => {\n    dispatch(showRightType({\n      showRightType: type\n    }));\n  };\n}; // 发送消息\n\nexport const pushChatMsg = chat => {\n  return dispatch => {\n    dispatch(sendChatMsg(chat));\n  };\n}; // 收到好友消息\n\nexport const recvChatMsg = chat => {\n  return dispatch => {\n    dispatch(receiveChatMsg(chat));\n  };\n}; // 获取好友基本信息\n\nexport const getFriendInfo = friend_uid => {\n  return async dispatch => {\n    await dispatch(changeRightType('userInfo'));\n    await dispatch(showFriendInfo(friend_uid));\n  };\n}; // 获取好友申请列表\n\nexport const getNewFriendList = token => {\n  return async dispatch => {\n    const response = await reqNewFriendList({\n      token\n    });\n    const result = response.data;\n\n    if (result.code === 200) {\n      dispatch(getNewFriends(result.data.list));\n    }\n  };\n}; // 获取用户通讯录列表\n\nexport const getUserMailList = token => {\n  return async dispatch => {\n    dispatch(getMailList(pySegSort(mailList)));\n  };\n};","map":{"version":3,"sources":["/Users/mr.bo/项目/React/react-im/src/redux/actions.js"],"names":["Cookies","websocket","initChatData","receiveChatMsg","sendChatMsg","showRightType","showFriendInfo","authSuccess","errMsg","userInfo","logOut","modifyUserContacts","getNewFriends","getMailList","reqLogin","reqUserInfo","reqLogout","reqNewFriendList","pySegSort","user","contact","mailList","login","username","password","dispatch","response","result","data","code","set","token","msg","logout","remove","initMain","contacts","initUserInfo","modifyContacts","initChatInfo","chatUserInfo","loading","changeRightType","type","pushChatMsg","chat","recvChatMsg","getFriendInfo","friend_uid","getNewFriendList","list","getUserMailList"],"mappings":"AAAA;;;AAGA,OAAOA,OAAP,MAAoB,WAApB;AACA,SAAQC,SAAR,QAAwB,oBAAxB;AACA,SACIC,YADJ,EACkBC,cADlB,EACkCC,WADlC,EAC+CC,aAD/C,EAC8DC,cAD9D,EAC8EC,WAD9E,EAEIC,MAFJ,EAEYC,QAFZ,EAEqBC,MAFrB,EAE6BC,kBAF7B,EAEiDC,aAFjD,EAEgEC,WAFhE,QAGO,QAHP;AAIA,SACIC,QADJ,EACcC,WADd,EAC2BC,SAD3B,EACsCC,gBADtC,QAEO,QAFP;AAGA,SAAQC,SAAR,QAAwB,UAAxB,C,CAEA;;AACA,SAAQC,IAAR,EAAcC,OAAd,QAA4B,oBAA5B;AACA,SAAQC,QAAR,QAAuB,oBAAvB,C,CAEA;;AACA,OAAO,MAAMC,KAAK,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACzC,SAAO,MAAMC,QAAN,IAAkB;AACrB,UAAMC,QAAQ,GAAG,MAAMZ,QAAQ,CAAC;AAACS,MAAAA,QAAD;AAAWC,MAAAA;AAAX,KAAD,CAA/B;AACA,UAAMG,MAAM,GAAGD,QAAQ,CAACE,IAAxB;;AACA,QAAID,MAAM,CAACE,IAAP,KAAgB,GAApB,EAAyB;AACrB7B,MAAAA,OAAO,CAAC8B,GAAR,CAAY,OAAZ,EAAqBH,MAAM,CAACC,IAAP,CAAYG,KAAjC;AACAN,MAAAA,QAAQ,CAAClB,WAAW,CAACoB,MAAM,CAACC,IAAR,CAAZ,CAAR;AACH,KAHD,MAGO;AACHH,MAAAA,QAAQ,CAACjB,MAAM,CAACmB,MAAM,CAACK,GAAR,CAAP,CAAR;AACH;AACJ,GATD;AAUH,CAXM,C,CAaP;;AACA,OAAO,MAAMC,MAAM,GAAG,MAAM;AACxB,SAAO,MAAMR,QAAN,IAAkB;AACrB,UAAMC,QAAQ,GAAG,MAAMV,SAAS,EAAhC;AACA,UAAMW,MAAM,GAAGD,QAAQ,CAACE,IAAxB;;AACA,QAAID,MAAM,CAACE,IAAP,KAAgB,GAApB,EAAyB;AACrB7B,MAAAA,OAAO,CAACkC,MAAR,CAAe,OAAf;AACAT,MAAAA,QAAQ,CAACf,MAAM,CAAC,EAAD,CAAP,CAAR;AACH,KAHD,MAGO;AACHe,MAAAA,QAAQ,CAACjB,MAAM,CAACmB,MAAM,CAACK,GAAR,CAAP,CAAR;AACH;AACJ,GATD;AAUH,CAXM,C,CAaP;;AACA,OAAO,MAAMG,QAAQ,GAAGJ,KAAK,IAAI;AAC7B,SAAO,MAAMN,QAAN,IAAkB;AACrBA,IAAAA,QAAQ,CAAChB,QAAQ,CAAC;AAACA,MAAAA,QAAQ,EAAEU,IAAX;AAAiBiB,MAAAA,QAAQ,EAAEhB,OAAO,IAAI;AAAtC,KAAD,CAAT,CAAR,CADqB,CAErB;AACH,GAHD;AAIH,CALM,C,CAOP;;AACA,OAAO,MAAMiB,YAAY,GAAGN,KAAK,IAAI;AACjC,SAAO,MAAMN,QAAN,IAAkB;AACrB,UAAMC,QAAQ,GAAG,MAAMX,WAAW,CAACgB,KAAD,CAAlC;AACA,UAAMJ,MAAM,GAAGD,QAAQ,CAACE,IAAxB;;AACA,QAAID,MAAM,CAACE,IAAP,KAAgB,GAApB,EAAyB;AACrBJ,MAAAA,QAAQ,CAAChB,QAAQ,CAACkB,MAAM,CAACC,IAAR,CAAT,CAAR;AACA3B,MAAAA,SAAS,CAAC0B,MAAM,CAACC,IAAP,CAAYnB,QAAb,CAAT;AACH,KAHD,MAGO;AACHgB,MAAAA,QAAQ,CAACjB,MAAM,CAACmB,MAAM,CAACK,GAAR,CAAP,CAAR;AACH;AACJ,GATD;AAUH,CAXM,C,CAaP;;AACA,OAAO,MAAMM,cAAc,GAAGF,QAAQ,IAAI;AACtC,SAAOX,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACd,kBAAkB,CAAC;AAACyB,MAAAA;AAAD,KAAD,CAAnB,CAAR;AACH,GAFD;AAGH,CAJM,C,CAMP;;AACA,OAAO,MAAMG,YAAY,GAAGC,YAAY,IAAI;AACxC,SAAOf,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACvB,YAAY,CAAC;AAACsC,MAAAA,YAAD;AAAeC,MAAAA,OAAO,EAAE,KAAxB;AAA+BpC,MAAAA,aAAa,EAAE;AAA9C,KAAD,CAAb,CAAR;AACH,GAFD;AAGH,CAJM,C,CAMP;;AACA,OAAO,MAAMqC,eAAe,GAAGC,IAAI,IAAI;AACnC,SAAOlB,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACpB,aAAa,CAAC;AAACA,MAAAA,aAAa,EAAEsC;AAAhB,KAAD,CAAd,CAAR;AACH,GAFD;AAGH,CAJM,C,CAMP;;AACA,OAAO,MAAMC,WAAW,GAAGC,IAAI,IAAI;AAC/B,SAAOpB,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACrB,WAAW,CAACyC,IAAD,CAAZ,CAAR;AACH,GAFD;AAGH,CAJM,C,CAMP;;AACA,OAAO,MAAMC,WAAW,GAAGD,IAAI,IAAI;AAC/B,SAAOpB,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACtB,cAAc,CAAC0C,IAAD,CAAf,CAAR;AACH,GAFD;AAGH,CAJM,C,CAMP;;AACA,OAAO,MAAME,aAAa,GAAGC,UAAU,IAAI;AACvC,SAAO,MAAMvB,QAAN,IAAkB;AACrB,UAAMA,QAAQ,CAACiB,eAAe,CAAC,UAAD,CAAhB,CAAd;AACA,UAAMjB,QAAQ,CAACnB,cAAc,CAAC0C,UAAD,CAAf,CAAd;AACH,GAHD;AAIH,CALM,C,CAOP;;AACA,OAAO,MAAMC,gBAAgB,GAAGlB,KAAK,IAAI;AACrC,SAAO,MAAMN,QAAN,IAAkB;AACrB,UAAMC,QAAQ,GAAG,MAAMT,gBAAgB,CAAC;AAACc,MAAAA;AAAD,KAAD,CAAvC;AACA,UAAMJ,MAAM,GAAGD,QAAQ,CAACE,IAAxB;;AACA,QAAID,MAAM,CAACE,IAAP,KAAgB,GAApB,EAAyB;AACrBJ,MAAAA,QAAQ,CAACb,aAAa,CAACe,MAAM,CAACC,IAAP,CAAYsB,IAAb,CAAd,CAAR;AACH;AACJ,GAND;AAOH,CARM,C,CAUP;;AACA,OAAO,MAAMC,eAAe,GAAGpB,KAAK,IAAI;AACpC,SAAO,MAAMN,QAAN,IAAkB;AACrBA,IAAAA,QAAQ,CAACZ,WAAW,CAACK,SAAS,CAACG,QAAD,CAAV,CAAZ,CAAR;AACH,GAFD;AAGH,CAJM","sourcesContent":["/**\n * 对应 reducers 中的 action 同步/异步请求\n */\nimport Cookies from 'js-cookie'\nimport {websocket} from '../utils/websocket'\nimport {\n    initChatData, receiveChatMsg, sendChatMsg, showRightType, showFriendInfo, authSuccess,\n    errMsg, userInfo,logOut, modifyUserContacts, getNewFriends, getMailList\n} from './init'\nimport {\n    reqLogin, reqUserInfo, reqLogout, reqNewFriendList\n} from '../api'\nimport {pySegSort} from '../utils'\n\n// 数据模拟\nimport {user, contact} from '../config/initMain'\nimport {mailList} from '../config/mailList'\n\n// 用户登录\nexport const login = (username, password) => {\n    return async dispatch => {\n        const response = await reqLogin({username, password})\n        const result = response.data\n        if (result.code === 200) {\n            Cookies.set('token', result.data.token)\n            dispatch(authSuccess(result.data))\n        } else {\n            dispatch(errMsg(result.msg))\n        }\n    }\n}\n\n// 退出登录\nexport const logout = () => {\n    return async dispatch => {\n        const response = await reqLogout()\n        const result = response.data\n        if (result.code === 200) {\n            Cookies.remove('token')\n            dispatch(logOut({}))\n        } else {\n            dispatch(errMsg(result.msg))\n        }\n    }\n}\n\n// 界面信息初始化\nexport const initMain = token => {\n    return async dispatch => {\n        dispatch(userInfo({userInfo: user, contacts: contact || []}))\n        // websocket(user)  // 这里可接入 socket\n    }\n}\n\n// 获取用户信息\nexport const initUserInfo = token => {\n    return async dispatch => {\n        const response = await reqUserInfo(token)\n        const result = response.data\n        if (result.code === 200) {\n            dispatch(userInfo(result.data))\n            websocket(result.data.userInfo)\n        } else {\n            dispatch(errMsg(result.msg))\n        }\n    }\n}\n\n// 修改消息会话列表\nexport const modifyContacts = contacts => {\n    return dispatch => {\n        dispatch(modifyUserContacts({contacts}))\n    }\n}\n\n// 初始化消息列表\nexport const initChatInfo = chatUserInfo => {\n    return dispatch => {\n        dispatch(initChatData({chatUserInfo, loading: false, showRightType: 'message'}))\n    }\n}\n\n// 切换右侧显示状态\nexport const changeRightType = type => {\n    return dispatch => {\n        dispatch(showRightType({showRightType: type}))\n    }\n}\n\n// 发送消息\nexport const pushChatMsg = chat => {\n    return dispatch => {\n        dispatch(sendChatMsg(chat))\n    }\n}\n\n// 收到好友消息\nexport const recvChatMsg = chat => {\n    return dispatch => {\n        dispatch(receiveChatMsg(chat))\n    }\n}\n\n// 获取好友基本信息\nexport const getFriendInfo = friend_uid => {\n    return async dispatch => {\n        await dispatch(changeRightType('userInfo'))\n        await dispatch(showFriendInfo(friend_uid))\n    }\n}\n\n// 获取好友申请列表\nexport const getNewFriendList = token => {\n    return async dispatch => {\n        const response = await reqNewFriendList({token})\n        const result = response.data\n        if (result.code === 200) {\n            dispatch(getNewFriends(result.data.list))\n        }\n    }\n}\n\n// 获取用户通讯录列表\nexport const getUserMailList = token => {\n    return async dispatch => {\n        dispatch(getMailList(pySegSort(mailList)))\n    }\n}"]},"metadata":{},"sourceType":"module"}